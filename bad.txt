-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Atuan/Par.y
-----------------------------------------------------------------------------


rule 11 is unused
rule 12 is unused
rule 21 is unused
rule 22 is unused
rule 25 is unused
rule 26 is unused
rule 27 is unused
rule 28 is unused
rule 33 is unused
rule 71 is unused
rule 72 is unused

terminal '{' is unused
terminal '}' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	BoolLiteral -> L_BoolLiteral                       (3)
	Program -> ListTop                                 (4)
	Top -> Def                                         (5)
	Top -> TypeDef                                     (6)
	Def -> Ident ListTIdent TypeAnnot '=' Expr         (7)
	Def -> Ident ListNTIdent '=' Expr                  (8)
	NTIdent -> Ident                                   (9)
	TIdent -> '(' Ident TypeAnnot ')'                  (10)
	OTIdent -> TIdent                                  (11)
	OTIdent -> Ident                                   (12)
	TypeDef -> 'data' Ident ListTVar 'where' ListConstr   (13)
	TVar -> Ident                                      (14)
	ListTVar ->                                        (15)
	ListTVar -> TVar ListTVar                          (16)
	Constr -> Ident TypeAnnot                          (17)
	ListConstr -> Constr                               (18)
	ListConstr -> Constr ListConstr                    (19)
	TypeAnnot -> '::' Type                             (20)
	OptTypeAnnot -> TypeAnnot                          (21)
	OptTypeAnnot ->                                    (22)
	ListTop -> Top ';'                                 (23)
	ListTop -> Top ';' ListTop                         (24)
	ListIdent -> Ident                                 (25)
	ListIdent -> Ident ListIdent                       (26)
	ListOTIdent ->                                     (27)
	ListOTIdent -> OTIdent ListOTIdent                 (28)
	ListTIdent ->                                      (29)
	ListTIdent -> TIdent ListTIdent                    (30)
	ListNTIdent ->                                     (31)
	ListNTIdent -> NTIdent ListNTIdent                 (32)
	Block -> '{' Expr '}'                              (33)
	Lambda -> '(lambda' ListTIdent TypeAnnot '=>' Expr ')'   (34)
	Lambda -> '(lambda' ListNTIdent '=>' Expr ')'      (35)
	Expr9 -> Ident                                     (36)
	Expr9 -> Integer                                   (37)
	Expr9 -> BoolLiteral                               (38)
	Expr9 -> '[' ListVal ']'                           (39)
	Expr9 -> '(' Expr ')'                              (40)
	Expr8 -> Lambda                                    (41)
	Expr8 -> Expr9                                     (42)
	Expr8 -> Expr9 ':' Expr9                           (43)
	Val -> Expr9                                       (44)
	ListVal ->                                         (45)
	ListVal -> Val                                     (46)
	ListVal -> Val ',' ListVal                         (47)
	Expr7 -> Expr9 ListExpr9                           (48)
	Expr7 -> Expr8                                     (49)
	Expr6 -> '-' Expr7                                 (50)
	Expr6 -> '!' Expr7                                 (51)
	Expr6 -> Expr7                                     (52)
	Expr5 -> Expr5 MulOp Expr6                         (53)
	Expr5 -> Expr6                                     (54)
	Expr4 -> Expr4 AddOp Expr5                         (55)
	Expr4 -> Expr5                                     (56)
	Expr3 -> Expr3 RelOp Expr4                         (57)
	Expr3 -> Expr4                                     (58)
	Expr2 -> Expr3 '&&' Expr2                          (59)
	Expr2 -> Expr3                                     (60)
	Expr1 -> Expr2 '||' Expr1                          (61)
	Expr1 -> 'match' Ident 'with' ListPatternBranch    (62)
	Expr1 -> 'if' Expr2 'then' Expr2 'else' Expr2      (63)
	Expr1 -> 'let' Def 'in' Expr2                      (64)
	Expr1 -> 'letrec' Def 'in' Expr2                   (65)
	Expr1 -> Expr2                                     (66)
	PatternBranch -> '(' Pattern ')' '>>>' Expr2       (67)
	ListPatternBranch -> PatternBranch                 (68)
	ListPatternBranch -> PatternBranch ',' ListPatternBranch   (69)
	Expr -> Expr1                                      (70)
	ListExpr ->                                        (71)
	ListExpr -> Expr ListExpr                          (72)
	ListExpr9 -> Expr9                                 (73)
	ListExpr9 -> Expr9 ListExpr9                       (74)
	AddOp -> '+'                                       (75)
	AddOp -> '-'                                       (76)
	MulOp -> '*'                                       (77)
	MulOp -> '/'                                       (78)
	MulOp -> '%'                                       (79)
	RelOp -> '<'                                       (80)
	RelOp -> '<='                                      (81)
	RelOp -> '>'                                       (82)
	RelOp -> '>='                                      (83)
	RelOp -> '=='                                      (84)
	RelOp -> '!='                                      (85)
	ListPattern -> '[]'                                (86)
	ListPattern -> Pattern4 ':' Pattern4               (87)
	Pattern5 -> Literal                                (88)
	Pattern5 -> '(' Pattern ')'                        (89)
	Pattern4 -> Ident ListField                        (90)
	Pattern4 -> Pattern5                               (91)
	Pattern3 -> ListPattern                            (92)
	Pattern3 -> Pattern4                               (93)
	Pattern -> Pattern1                                (94)
	Pattern1 -> Pattern2                               (95)
	Pattern2 -> Pattern3                               (96)
	Field -> Pattern5                                  (97)
	Field -> Ident                                     (98)
	ListField ->                                       (99)
	ListField -> Field ListField                       (100)
	Literal -> Integer                                 (101)
	Literal -> BoolLiteral                             (102)
	Literal -> '[' ListLiteral ']'                     (103)
	ListLiteral ->                                     (104)
	ListLiteral -> Literal                             (105)
	ListLiteral -> Literal ',' ListLiteral             (106)
	Type4 -> 'Int'                                     (107)
	Type4 -> 'Bool'                                    (108)
	Type4 -> '[' Type ']'                              (109)
	Type4 -> Ident                                     (110)
	Type4 -> '(' Type ')'                              (111)
	Type3 -> '(' Ident ListType4 ')'                   (112)
	Type3 -> Type4                                     (113)
	ListType4 -> Type4                                 (114)
	ListType4 -> Type4 ListType4                       (115)
	Type1 -> Type2 '->' Type1                          (116)
	Type1 -> Type2                                     (117)
	Type -> Type1                                      (118)
	Type2 -> Type3                                     (119)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	'(lambda'      { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	':'            { PT _ (TS _ 14) }
	'::'           { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'=>'           { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'>>>'          { PT _ (TS _ 24) }
	'Bool'         { PT _ (TS _ 25) }
	'Int'          { PT _ (TS _ 26) }
	'['            { PT _ (TS _ 27) }
	'[]'           { PT _ (TS _ 28) }
	']'            { PT _ (TS _ 29) }
	'data'         { PT _ (TS _ 30) }
	'else'         { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'in'           { PT _ (TS _ 33) }
	'let'          { PT _ (TS _ 34) }
	'letrec'       { PT _ (TS _ 35) }
	'match'        { PT _ (TS _ 36) }
	'then'         { PT _ (TS _ 37) }
	'where'        { PT _ (TS _ 38) }
	'with'         { PT _ (TS _ 39) }
	'{'            { PT _ (TS _ 40) }
	'||'           { PT _ (TS _ 41) }
	'}'            { PT _ (TS _ 42) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_BoolLiteral  { PT _ (T_BoolLiteral _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	BoolLiteral     rule  3
	Program         rule  4
	Top             rules 5, 6
	Def             rules 7, 8
	NTIdent         rule  9
	TIdent          rule  10
	OTIdent         rules 11, 12
	TypeDef         rule  13
	TVar            rule  14
	ListTVar        rules 15, 16
	Constr          rule  17
	ListConstr      rules 18, 19
	TypeAnnot       rule  20
	OptTypeAnnot    rules 21, 22
	ListTop         rules 23, 24
	ListIdent       rules 25, 26
	ListOTIdent     rules 27, 28
	ListTIdent      rules 29, 30
	ListNTIdent     rules 31, 32
	Block           rule  33
	Lambda          rules 34, 35
	Expr9           rules 36, 37, 38, 39, 40
	Expr8           rules 41, 42, 43
	Val             rule  44
	ListVal         rules 45, 46, 47
	Expr7           rules 48, 49
	Expr6           rules 50, 51, 52
	Expr5           rules 53, 54
	Expr4           rules 55, 56
	Expr3           rules 57, 58
	Expr2           rules 59, 60
	Expr1           rules 61, 62, 63, 64, 65, 66
	PatternBranch   rule  67
	ListPatternBranch rules 68, 69
	Expr            rule  70
	ListExpr        rules 71, 72
	ListExpr9       rules 73, 74
	AddOp           rules 75, 76
	MulOp           rules 77, 78, 79
	RelOp           rules 80, 81, 82, 83, 84, 85
	ListPattern     rules 86, 87
	Pattern5        rules 88, 89
	Pattern4        rules 90, 91
	Pattern3        rules 92, 93
	Pattern         rule  94
	Pattern1        rule  95
	Pattern2        rule  96
	Field           rules 97, 98
	ListField       rules 99, 100
	Literal         rules 101, 102, 103
	ListLiteral     rules 104, 105, 106
	Type4           rules 107, 108, 109, 110, 111
	Type3           rules 112, 113
	ListType4       rules 114, 115
	Type1           rules 116, 117
	Type            rule  118
	Type2           rule  119

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'data'         shift, and enter state 9
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	Top            goto state 5
	Def            goto state 6
	TypeDef        goto state 7
	ListTop        goto state 8

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'->'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	'::'           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'=>'           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'Bool'         reduce using rule 1
	'Int'          reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'else'         reduce using rule 1
	'in'           reduce using rule 1
	'then'         reduce using rule 1
	'where'        reduce using rule 1
	'with'         reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1
	L_integ        reduce using rule 1
	L_BoolLiteral  reduce using rule 1


State 3

	Def -> Ident . ListTIdent TypeAnnot '=' Expr        (rule 7)
	Def -> Ident . ListNTIdent '=' Expr                 (rule 8)

	'('            shift, and enter state 17
	'::'           reduce using rule 29
	'='            reduce using rule 31
	L_Ident        shift, and enter state 2

	Ident          goto state 12
	NTIdent        goto state 13
	TIdent         goto state 14
	ListTIdent     goto state 15
	ListNTIdent    goto state 16

State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTop -> Top . ';'                                (rule 23)
	ListTop -> Top . ';' ListTop                        (rule 24)

	';'            shift, and enter state 11


State 6

	Top -> Def .                                        (rule 5)

	';'            reduce using rule 5


State 7

	Top -> TypeDef .                                    (rule 6)

	';'            reduce using rule 6


State 8

	Program -> ListTop .                                (rule 4)

	%eof           reduce using rule 4


State 9

	TypeDef -> 'data' . Ident ListTVar 'where' ListConstr    (rule 13)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 10

	TypeDef -> 'data' Ident . ListTVar 'where' ListConstr    (rule 13)

	'where'        reduce using rule 15
	L_Ident        shift, and enter state 2

	Ident          goto state 25
	TVar           goto state 26
	ListTVar       goto state 27

State 11

	ListTop -> Top ';' .                                (rule 23)
	ListTop -> Top ';' . ListTop                        (rule 24)

	'data'         shift, and enter state 9
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 23

	Ident          goto state 3
	Top            goto state 5
	Def            goto state 6
	TypeDef        goto state 7
	ListTop        goto state 24

State 12

	NTIdent -> Ident .                                  (rule 9)

	'='            reduce using rule 9
	'=>'           reduce using rule 9
	L_Ident        reduce using rule 9


State 13

	ListNTIdent -> NTIdent . ListNTIdent                (rule 32)

	'='            reduce using rule 31
	'=>'           reduce using rule 31
	L_Ident        shift, and enter state 2

	Ident          goto state 12
	NTIdent        goto state 13
	ListNTIdent    goto state 23

State 14

	ListTIdent -> TIdent . ListTIdent                   (rule 30)

	'('            shift, and enter state 17
	'::'           reduce using rule 29

	TIdent         goto state 14
	ListTIdent     goto state 22

State 15

	Def -> Ident ListTIdent . TypeAnnot '=' Expr        (rule 7)

	'::'           shift, and enter state 21

	TypeAnnot      goto state 20

State 16

	Def -> Ident ListNTIdent . '=' Expr                 (rule 8)

	'='            shift, and enter state 19


State 17

	TIdent -> '(' . Ident TypeAnnot ')'                 (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 18

State 18

	TIdent -> '(' Ident . TypeAnnot ')'                 (rule 10)

	'::'           shift, and enter state 21

	TypeAnnot      goto state 66

State 19

	Def -> Ident ListNTIdent '=' . Expr                 (rule 8)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54

State 20

	Def -> Ident ListTIdent TypeAnnot . '=' Expr        (rule 7)

	'='            shift, and enter state 40


State 21

	TypeAnnot -> '::' . Type                            (rule 20)

	'('            shift, and enter state 36
	'Bool'         shift, and enter state 37
	'Int'          shift, and enter state 38
	'['            shift, and enter state 39
	L_Ident        shift, and enter state 2

	Ident          goto state 30
	Type4          goto state 31
	Type3          goto state 32
	Type1          goto state 33
	Type           goto state 34
	Type2          goto state 35

State 22

	ListTIdent -> TIdent ListTIdent .                   (rule 30)

	'::'           reduce using rule 30


State 23

	ListNTIdent -> NTIdent ListNTIdent .                (rule 32)

	'='            reduce using rule 32
	'=>'           reduce using rule 32


State 24

	ListTop -> Top ';' ListTop .                        (rule 24)

	%eof           reduce using rule 24


State 25

	TVar -> Ident .                                     (rule 14)

	'where'        reduce using rule 14
	L_Ident        reduce using rule 14


State 26

	ListTVar -> TVar . ListTVar                         (rule 16)

	'where'        reduce using rule 15
	L_Ident        shift, and enter state 2

	Ident          goto state 25
	TVar           goto state 26
	ListTVar       goto state 29

State 27

	TypeDef -> 'data' Ident ListTVar . 'where' ListConstr    (rule 13)

	'where'        shift, and enter state 28


State 28

	TypeDef -> 'data' Ident ListTVar 'where' . ListConstr    (rule 13)

	L_Ident        shift, and enter state 2

	Ident          goto state 104
	Constr         goto state 105
	ListConstr     goto state 106

State 29

	ListTVar -> TVar ListTVar .                         (rule 16)

	'where'        reduce using rule 16


State 30

	Type4 -> Ident .                                    (rule 110)

	'('            reduce using rule 110
	')'            reduce using rule 110
	'->'           reduce using rule 110
	';'            reduce using rule 110
	'='            reduce using rule 110
	'=>'           reduce using rule 110
	'Bool'         reduce using rule 110
	'Int'          reduce using rule 110
	'['            reduce using rule 110
	']'            reduce using rule 110
	L_Ident        reduce using rule 110


State 31

	Type3 -> Type4 .                                    (rule 113)

	')'            reduce using rule 113
	'->'           reduce using rule 113
	';'            reduce using rule 113
	'='            reduce using rule 113
	'=>'           reduce using rule 113
	']'            reduce using rule 113
	L_Ident        reduce using rule 113


State 32

	Type2 -> Type3 .                                    (rule 119)

	')'            reduce using rule 119
	'->'           reduce using rule 119
	';'            reduce using rule 119
	'='            reduce using rule 119
	'=>'           reduce using rule 119
	']'            reduce using rule 119
	L_Ident        reduce using rule 119


State 33

	Type -> Type1 .                                     (rule 118)

	')'            reduce using rule 118
	';'            reduce using rule 118
	'='            reduce using rule 118
	'=>'           reduce using rule 118
	']'            reduce using rule 118
	L_Ident        reduce using rule 118


State 34

	TypeAnnot -> '::' Type .                            (rule 20)

	')'            reduce using rule 20
	';'            reduce using rule 20
	'='            reduce using rule 20
	'=>'           reduce using rule 20
	L_Ident        reduce using rule 20


State 35

	Type1 -> Type2 . '->' Type1                         (rule 116)
	Type1 -> Type2 .                                    (rule 117)

	')'            reduce using rule 117
	'->'           shift, and enter state 103
	';'            reduce using rule 117
	'='            reduce using rule 117
	'=>'           reduce using rule 117
	']'            reduce using rule 117
	L_Ident        reduce using rule 117


State 36

	Type4 -> '(' . Type ')'                             (rule 111)
	Type3 -> '(' . Ident ListType4 ')'                  (rule 112)

	'('            shift, and enter state 36
	'Bool'         shift, and enter state 37
	'Int'          shift, and enter state 38
	'['            shift, and enter state 39
	L_Ident        shift, and enter state 2

	Ident          goto state 101
	Type4          goto state 31
	Type3          goto state 32
	Type1          goto state 33
	Type           goto state 102
	Type2          goto state 35

State 37

	Type4 -> 'Bool' .                                   (rule 108)

	'('            reduce using rule 108
	')'            reduce using rule 108
	'->'           reduce using rule 108
	';'            reduce using rule 108
	'='            reduce using rule 108
	'=>'           reduce using rule 108
	'Bool'         reduce using rule 108
	'Int'          reduce using rule 108
	'['            reduce using rule 108
	']'            reduce using rule 108
	L_Ident        reduce using rule 108


State 38

	Type4 -> 'Int' .                                    (rule 107)

	'('            reduce using rule 107
	')'            reduce using rule 107
	'->'           reduce using rule 107
	';'            reduce using rule 107
	'='            reduce using rule 107
	'=>'           reduce using rule 107
	'Bool'         reduce using rule 107
	'Int'          reduce using rule 107
	'['            reduce using rule 107
	']'            reduce using rule 107
	L_Ident        reduce using rule 107


State 39

	Type4 -> '[' . Type ']'                             (rule 109)

	'('            shift, and enter state 36
	'Bool'         shift, and enter state 37
	'Int'          shift, and enter state 38
	'['            shift, and enter state 39
	L_Ident        shift, and enter state 2

	Ident          goto state 30
	Type4          goto state 31
	Type3          goto state 32
	Type1          goto state 33
	Type           goto state 100
	Type2          goto state 35

State 40

	Def -> Ident ListTIdent TypeAnnot '=' . Expr        (rule 7)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 99

State 41

	Expr9 -> Ident .                                    (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	':'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	'else'         reduce using rule 36
	'in'           reduce using rule 36
	'then'         reduce using rule 36
	'||'           reduce using rule 36
	L_Ident        reduce using rule 36
	L_integ        reduce using rule 36
	L_BoolLiteral  reduce using rule 36


State 42

	Expr9 -> Integer .                                  (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	':'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	'else'         reduce using rule 37
	'in'           reduce using rule 37
	'then'         reduce using rule 37
	'||'           reduce using rule 37
	L_Ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_BoolLiteral  reduce using rule 37


State 43

	Expr9 -> BoolLiteral .                              (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	':'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	'else'         reduce using rule 38
	'in'           reduce using rule 38
	'then'         reduce using rule 38
	'||'           reduce using rule 38
	L_Ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_BoolLiteral  reduce using rule 38


State 44

	Expr8 -> Lambda .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'else'         reduce using rule 41
	'in'           reduce using rule 41
	'then'         reduce using rule 41
	'||'           reduce using rule 41


State 45

	Expr8 -> Expr9 .                                    (rule 42)
	Expr8 -> Expr9 . ':' Expr9                          (rule 43)
	Expr7 -> Expr9 . ListExpr9                          (rule 48)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            shift, and enter state 56
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	':'            shift, and enter state 98
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            shift, and enter state 59
	'else'         reduce using rule 42
	'in'           reduce using rule 42
	'then'         reduce using rule 42
	'||'           reduce using rule 42
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 96
	ListExpr9      goto state 97

State 46

	Expr7 -> Expr8 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'else'         reduce using rule 49
	'in'           reduce using rule 49
	'then'         reduce using rule 49
	'||'           reduce using rule 49


State 47

	Expr6 -> Expr7 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'else'         reduce using rule 52
	'in'           reduce using rule 52
	'then'         reduce using rule 52
	'||'           reduce using rule 52


State 48

	Expr5 -> Expr6 .                                    (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'else'         reduce using rule 54
	'in'           reduce using rule 54
	'then'         reduce using rule 54
	'||'           reduce using rule 54


State 49

	Expr5 -> Expr5 . MulOp Expr6                        (rule 53)
	Expr4 -> Expr5 .                                    (rule 56)

	'!='           reduce using rule 56
	'%'            shift, and enter state 93
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            shift, and enter state 94
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 95
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'else'         reduce using rule 56
	'in'           reduce using rule 56
	'then'         reduce using rule 56
	'||'           reduce using rule 56

	MulOp          goto state 92

State 50

	Expr4 -> Expr4 . AddOp Expr5                        (rule 55)
	Expr3 -> Expr4 .                                    (rule 58)

	'!='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 90
	','            reduce using rule 58
	'-'            shift, and enter state 91
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'else'         reduce using rule 58
	'in'           reduce using rule 58
	'then'         reduce using rule 58
	'||'           reduce using rule 58

	AddOp          goto state 89

State 51

	Expr3 -> Expr3 . RelOp Expr4                        (rule 57)
	Expr2 -> Expr3 . '&&' Expr2                         (rule 59)
	Expr2 -> Expr3 .                                    (rule 60)

	'!='           shift, and enter state 82
	'&&'           shift, and enter state 83
	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'else'         reduce using rule 60
	'in'           reduce using rule 60
	'then'         reduce using rule 60
	'||'           reduce using rule 60

	RelOp          goto state 81

State 52

	Expr1 -> Expr2 . '||' Expr1                         (rule 61)
	Expr1 -> Expr2 .                                    (rule 66)

	')'            reduce using rule 66
	';'            reduce using rule 66
	'in'           reduce using rule 66
	'||'           shift, and enter state 80


State 53

	Expr -> Expr1 .                                     (rule 70)

	')'            reduce using rule 70
	';'            reduce using rule 70
	'in'           reduce using rule 70


State 54

	Def -> Ident ListNTIdent '=' Expr .                 (rule 8)

	';'            reduce using rule 8
	'in'           reduce using rule 8


State 55

	Expr6 -> '!' . Expr7                                (rule 51)

	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 79

State 56

	Expr9 -> '(' . Expr ')'                             (rule 40)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 78

State 57

	Lambda -> '(lambda' . ListTIdent TypeAnnot '=>' Expr ')'    (rule 34)
	Lambda -> '(lambda' . ListNTIdent '=>' Expr ')'     (rule 35)

	'('            shift, and enter state 17
	'::'           reduce using rule 29
	'=>'           reduce using rule 31
	L_Ident        shift, and enter state 2

	Ident          goto state 12
	NTIdent        goto state 13
	TIdent         goto state 14
	ListTIdent     goto state 76
	ListNTIdent    goto state 77

State 58

	Expr6 -> '-' . Expr7                                (rule 50)

	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 75

State 59

	Expr9 -> '[' . ListVal ']'                          (rule 39)

	'('            shift, and enter state 56
	'['            shift, and enter state 59
	']'            reduce using rule 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 72
	Val            goto state 73
	ListVal        goto state 74

State 60

	Expr1 -> 'if' . Expr2 'then' Expr2 'else' Expr2     (rule 63)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 71

State 61

	Expr1 -> 'let' . Def 'in' Expr2                     (rule 64)

	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Def            goto state 70

State 62

	Expr1 -> 'letrec' . Def 'in' Expr2                  (rule 65)

	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Def            goto state 69

State 63

	Expr1 -> 'match' . Ident 'with' ListPatternBranch    (rule 62)

	L_Ident        shift, and enter state 2

	Ident          goto state 68

State 64

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'else'         reduce using rule 2
	'in'           reduce using rule 2
	'then'         reduce using rule 2
	'||'           reduce using rule 2
	L_Ident        reduce using rule 2
	L_integ        reduce using rule 2
	L_BoolLiteral  reduce using rule 2


State 65

	BoolLiteral -> L_BoolLiteral .                      (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'else'         reduce using rule 3
	'in'           reduce using rule 3
	'then'         reduce using rule 3
	'||'           reduce using rule 3
	L_Ident        reduce using rule 3
	L_integ        reduce using rule 3
	L_BoolLiteral  reduce using rule 3


State 66

	TIdent -> '(' Ident TypeAnnot . ')'                 (rule 10)

	')'            shift, and enter state 67


State 67

	TIdent -> '(' Ident TypeAnnot ')' .                 (rule 10)

	'('            reduce using rule 10
	'::'           reduce using rule 10


State 68

	Expr1 -> 'match' Ident . 'with' ListPatternBranch    (rule 62)

	'with'         shift, and enter state 130


State 69

	Expr1 -> 'letrec' Def . 'in' Expr2                  (rule 65)

	'in'           shift, and enter state 129


State 70

	Expr1 -> 'let' Def . 'in' Expr2                     (rule 64)

	'in'           shift, and enter state 128


State 71

	Expr1 -> 'if' Expr2 . 'then' Expr2 'else' Expr2     (rule 63)

	'then'         shift, and enter state 127


State 72

	Val -> Expr9 .                                      (rule 44)

	','            reduce using rule 44
	']'            reduce using rule 44


State 73

	ListVal -> Val .                                    (rule 46)
	ListVal -> Val . ',' ListVal                        (rule 47)

	','            shift, and enter state 126
	']'            reduce using rule 46


State 74

	Expr9 -> '[' ListVal . ']'                          (rule 39)

	']'            shift, and enter state 125


State 75

	Expr6 -> '-' Expr7 .                                (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'else'         reduce using rule 50
	'in'           reduce using rule 50
	'then'         reduce using rule 50
	'||'           reduce using rule 50


State 76

	Lambda -> '(lambda' ListTIdent . TypeAnnot '=>' Expr ')'    (rule 34)

	'::'           shift, and enter state 21

	TypeAnnot      goto state 124

State 77

	Lambda -> '(lambda' ListNTIdent . '=>' Expr ')'     (rule 35)

	'=>'           shift, and enter state 123


State 78

	Expr9 -> '(' Expr . ')'                             (rule 40)

	')'            shift, and enter state 122


State 79

	Expr6 -> '!' Expr7 .                                (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'else'         reduce using rule 51
	'in'           reduce using rule 51
	'then'         reduce using rule 51
	'||'           reduce using rule 51


State 80

	Expr1 -> Expr2 '||' . Expr1                         (rule 61)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 121

State 81

	Expr3 -> Expr3 RelOp . Expr4                        (rule 57)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 120

State 82

	RelOp -> '!=' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'(lambda'      reduce using rule 85
	'-'            reduce using rule 85
	'['            reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_BoolLiteral  reduce using rule 85


State 83

	Expr2 -> Expr3 '&&' . Expr2                         (rule 59)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 119

State 84

	RelOp -> '<' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'(lambda'      reduce using rule 80
	'-'            reduce using rule 80
	'['            reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_BoolLiteral  reduce using rule 80


State 85

	RelOp -> '<=' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'(lambda'      reduce using rule 81
	'-'            reduce using rule 81
	'['            reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_BoolLiteral  reduce using rule 81


State 86

	RelOp -> '==' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'(lambda'      reduce using rule 84
	'-'            reduce using rule 84
	'['            reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_BoolLiteral  reduce using rule 84


State 87

	RelOp -> '>' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'(lambda'      reduce using rule 82
	'-'            reduce using rule 82
	'['            reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_BoolLiteral  reduce using rule 82


State 88

	RelOp -> '>=' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'(lambda'      reduce using rule 83
	'-'            reduce using rule 83
	'['            reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_BoolLiteral  reduce using rule 83


State 89

	Expr4 -> Expr4 AddOp . Expr5                        (rule 55)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 118

State 90

	AddOp -> '+' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'(lambda'      reduce using rule 75
	'-'            reduce using rule 75
	'['            reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_BoolLiteral  reduce using rule 75


State 91

	AddOp -> '-' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'(lambda'      reduce using rule 76
	'-'            reduce using rule 76
	'['            reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_BoolLiteral  reduce using rule 76


State 92

	Expr5 -> Expr5 MulOp . Expr6                        (rule 53)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 117

State 93

	MulOp -> '%' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'(lambda'      reduce using rule 79
	'-'            reduce using rule 79
	'['            reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_BoolLiteral  reduce using rule 79


State 94

	MulOp -> '*' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'(lambda'      reduce using rule 77
	'-'            reduce using rule 77
	'['            reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_BoolLiteral  reduce using rule 77


State 95

	MulOp -> '/' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'(lambda'      reduce using rule 78
	'-'            reduce using rule 78
	'['            reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_BoolLiteral  reduce using rule 78


State 96

	ListExpr9 -> Expr9 .                                (rule 73)
	ListExpr9 -> Expr9 . ListExpr9                      (rule 74)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	'('            shift, and enter state 56
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'['            shift, and enter state 59
	'else'         reduce using rule 73
	'in'           reduce using rule 73
	'then'         reduce using rule 73
	'||'           reduce using rule 73
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 96
	ListExpr9      goto state 116

State 97

	Expr7 -> Expr9 ListExpr9 .                          (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'else'         reduce using rule 48
	'in'           reduce using rule 48
	'then'         reduce using rule 48
	'||'           reduce using rule 48


State 98

	Expr8 -> Expr9 ':' . Expr9                          (rule 43)

	'('            shift, and enter state 56
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 115

State 99

	Def -> Ident ListTIdent TypeAnnot '=' Expr .        (rule 7)

	';'            reduce using rule 7
	'in'           reduce using rule 7


State 100

	Type4 -> '[' Type . ']'                             (rule 109)

	']'            shift, and enter state 114


State 101

	Type4 -> Ident .                                    (rule 110)
	Type3 -> '(' Ident . ListType4 ')'                  (rule 112)

	'('            shift, and enter state 113
	')'            reduce using rule 110
	'->'           reduce using rule 110
	'Bool'         shift, and enter state 37
	'Int'          shift, and enter state 38
	'['            shift, and enter state 39
	L_Ident        shift, and enter state 2

	Ident          goto state 30
	Type4          goto state 111
	ListType4      goto state 112

State 102

	Type4 -> '(' Type . ')'                             (rule 111)

	')'            shift, and enter state 110


State 103

	Type1 -> Type2 '->' . Type1                         (rule 116)

	'('            shift, and enter state 36
	'Bool'         shift, and enter state 37
	'Int'          shift, and enter state 38
	'['            shift, and enter state 39
	L_Ident        shift, and enter state 2

	Ident          goto state 30
	Type4          goto state 31
	Type3          goto state 32
	Type1          goto state 109
	Type2          goto state 35

State 104

	Constr -> Ident . TypeAnnot                         (rule 17)

	'::'           shift, and enter state 21

	TypeAnnot      goto state 108

State 105

	ListConstr -> Constr .                              (rule 18)
	ListConstr -> Constr . ListConstr                   (rule 19)

	';'            reduce using rule 18
	L_Ident        shift, and enter state 2

	Ident          goto state 104
	Constr         goto state 105
	ListConstr     goto state 107

State 106

	TypeDef -> 'data' Ident ListTVar 'where' ListConstr .    (rule 13)

	';'            reduce using rule 13


State 107

	ListConstr -> Constr ListConstr .                   (rule 19)

	';'            reduce using rule 19


State 108

	Constr -> Ident TypeAnnot .                         (rule 17)

	';'            reduce using rule 17
	L_Ident        reduce using rule 17


State 109

	Type1 -> Type2 '->' Type1 .                         (rule 116)

	')'            reduce using rule 116
	';'            reduce using rule 116
	'='            reduce using rule 116
	'=>'           reduce using rule 116
	']'            reduce using rule 116
	L_Ident        reduce using rule 116


State 110

	Type4 -> '(' Type ')' .                             (rule 111)

	'('            reduce using rule 111
	')'            reduce using rule 111
	'->'           reduce using rule 111
	';'            reduce using rule 111
	'='            reduce using rule 111
	'=>'           reduce using rule 111
	'Bool'         reduce using rule 111
	'Int'          reduce using rule 111
	'['            reduce using rule 111
	']'            reduce using rule 111
	L_Ident        reduce using rule 111


State 111

	ListType4 -> Type4 .                                (rule 114)
	ListType4 -> Type4 . ListType4                      (rule 115)

	'('            shift, and enter state 113
	')'            reduce using rule 114
	'Bool'         shift, and enter state 37
	'Int'          shift, and enter state 38
	'['            shift, and enter state 39
	L_Ident        shift, and enter state 2

	Ident          goto state 30
	Type4          goto state 111
	ListType4      goto state 141

State 112

	Type3 -> '(' Ident ListType4 . ')'                  (rule 112)

	')'            shift, and enter state 140


State 113

	Type4 -> '(' . Type ')'                             (rule 111)

	'('            shift, and enter state 36
	'Bool'         shift, and enter state 37
	'Int'          shift, and enter state 38
	'['            shift, and enter state 39
	L_Ident        shift, and enter state 2

	Ident          goto state 30
	Type4          goto state 31
	Type3          goto state 32
	Type1          goto state 33
	Type           goto state 102
	Type2          goto state 35

State 114

	Type4 -> '[' Type ']' .                             (rule 109)

	'('            reduce using rule 109
	')'            reduce using rule 109
	'->'           reduce using rule 109
	';'            reduce using rule 109
	'='            reduce using rule 109
	'=>'           reduce using rule 109
	'Bool'         reduce using rule 109
	'Int'          reduce using rule 109
	'['            reduce using rule 109
	']'            reduce using rule 109
	L_Ident        reduce using rule 109


State 115

	Expr8 -> Expr9 ':' Expr9 .                          (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'else'         reduce using rule 43
	'in'           reduce using rule 43
	'then'         reduce using rule 43
	'||'           reduce using rule 43


State 116

	ListExpr9 -> Expr9 ListExpr9 .                      (rule 74)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'/'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'else'         reduce using rule 74
	'in'           reduce using rule 74
	'then'         reduce using rule 74
	'||'           reduce using rule 74


State 117

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'else'         reduce using rule 53
	'in'           reduce using rule 53
	'then'         reduce using rule 53
	'||'           reduce using rule 53


State 118

	Expr5 -> Expr5 . MulOp Expr6                        (rule 53)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 55)

	'!='           reduce using rule 55
	'%'            shift, and enter state 93
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            shift, and enter state 94
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 95
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'else'         reduce using rule 55
	'in'           reduce using rule 55
	'then'         reduce using rule 55
	'||'           reduce using rule 55

	MulOp          goto state 92

State 119

	Expr2 -> Expr3 '&&' Expr2 .                         (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'else'         reduce using rule 59
	'in'           reduce using rule 59
	'then'         reduce using rule 59
	'||'           reduce using rule 59


State 120

	Expr4 -> Expr4 . AddOp Expr5                        (rule 55)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 57)

	'!='           reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'+'            shift, and enter state 90
	','            reduce using rule 57
	'-'            shift, and enter state 91
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'else'         reduce using rule 57
	'in'           reduce using rule 57
	'then'         reduce using rule 57
	'||'           reduce using rule 57

	AddOp          goto state 89

State 121

	Expr1 -> Expr2 '||' Expr1 .                         (rule 61)

	')'            reduce using rule 61
	';'            reduce using rule 61
	'in'           reduce using rule 61


State 122

	Expr9 -> '(' Expr ')' .                             (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	':'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	'else'         reduce using rule 40
	'in'           reduce using rule 40
	'then'         reduce using rule 40
	'||'           reduce using rule 40
	L_Ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_BoolLiteral  reduce using rule 40


State 123

	Lambda -> '(lambda' ListNTIdent '=>' . Expr ')'     (rule 35)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 139

State 124

	Lambda -> '(lambda' ListTIdent TypeAnnot . '=>' Expr ')'    (rule 34)

	'=>'           shift, and enter state 138


State 125

	Expr9 -> '[' ListVal ']' .                          (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	':'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	'else'         reduce using rule 39
	'in'           reduce using rule 39
	'then'         reduce using rule 39
	'||'           reduce using rule 39
	L_Ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_BoolLiteral  reduce using rule 39


State 126

	ListVal -> Val ',' . ListVal                        (rule 47)

	'('            shift, and enter state 56
	'['            shift, and enter state 59
	']'            reduce using rule 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 72
	Val            goto state 73
	ListVal        goto state 137

State 127

	Expr1 -> 'if' Expr2 'then' . Expr2 'else' Expr2     (rule 63)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 136

State 128

	Expr1 -> 'let' Def 'in' . Expr2                     (rule 64)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 135

State 129

	Expr1 -> 'letrec' Def 'in' . Expr2                  (rule 65)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 134

State 130

	Expr1 -> 'match' Ident 'with' . ListPatternBranch    (rule 62)

	'('            shift, and enter state 133

	PatternBranch  goto state 131
	ListPatternBranchgoto state 132

State 131

	ListPatternBranch -> PatternBranch .                (rule 68)
	ListPatternBranch -> PatternBranch . ',' ListPatternBranch    (rule 69)

	')'            reduce using rule 68
	','            shift, and enter state 159
	';'            reduce using rule 68
	'in'           reduce using rule 68


State 132

	Expr1 -> 'match' Ident 'with' ListPatternBranch .    (rule 62)

	')'            reduce using rule 62
	';'            reduce using rule 62
	'in'           reduce using rule 62


State 133

	PatternBranch -> '(' . Pattern ')' '>>>' Expr2      (rule 67)

	'('            shift, and enter state 156
	'['            shift, and enter state 157
	'[]'           shift, and enter state 158
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 145
	Integer        goto state 146
	BoolLiteral    goto state 147
	ListPattern    goto state 148
	Pattern5       goto state 149
	Pattern4       goto state 150
	Pattern3       goto state 151
	Pattern        goto state 152
	Pattern1       goto state 153
	Pattern2       goto state 154
	Literal        goto state 155

State 134

	Expr1 -> 'letrec' Def 'in' Expr2 .                  (rule 65)

	')'            reduce using rule 65
	';'            reduce using rule 65
	'in'           reduce using rule 65


State 135

	Expr1 -> 'let' Def 'in' Expr2 .                     (rule 64)

	')'            reduce using rule 64
	';'            reduce using rule 64
	'in'           reduce using rule 64


State 136

	Expr1 -> 'if' Expr2 'then' Expr2 . 'else' Expr2     (rule 63)

	'else'         shift, and enter state 144


State 137

	ListVal -> Val ',' ListVal .                        (rule 47)

	']'            reduce using rule 47


State 138

	Lambda -> '(lambda' ListTIdent TypeAnnot '=>' . Expr ')'    (rule 34)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 143

State 139

	Lambda -> '(lambda' ListNTIdent '=>' Expr . ')'     (rule 35)

	')'            shift, and enter state 142


State 140

	Type3 -> '(' Ident ListType4 ')' .                  (rule 112)

	')'            reduce using rule 112
	'->'           reduce using rule 112
	';'            reduce using rule 112
	'='            reduce using rule 112
	'=>'           reduce using rule 112
	']'            reduce using rule 112
	L_Ident        reduce using rule 112


State 141

	ListType4 -> Type4 ListType4 .                      (rule 115)

	')'            reduce using rule 115


State 142

	Lambda -> '(lambda' ListNTIdent '=>' Expr ')' .     (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'else'         reduce using rule 35
	'in'           reduce using rule 35
	'then'         reduce using rule 35
	'||'           reduce using rule 35


State 143

	Lambda -> '(lambda' ListTIdent TypeAnnot '=>' Expr . ')'    (rule 34)

	')'            shift, and enter state 171


State 144

	Expr1 -> 'if' Expr2 'then' Expr2 'else' . Expr2     (rule 63)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 170

State 145

	Pattern4 -> Ident . ListField                       (rule 90)

	'('            shift, and enter state 156
	')'            reduce using rule 99
	':'            reduce using rule 99
	'['            shift, and enter state 157
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 166
	Integer        goto state 146
	BoolLiteral    goto state 147
	Pattern5       goto state 167
	Field          goto state 168
	ListField      goto state 169
	Literal        goto state 155

State 146

	Literal -> Integer .                                (rule 101)

	'('            reduce using rule 101
	')'            reduce using rule 101
	','            reduce using rule 101
	':'            reduce using rule 101
	'['            reduce using rule 101
	']'            reduce using rule 101
	L_Ident        reduce using rule 101
	L_integ        reduce using rule 101
	L_BoolLiteral  reduce using rule 101


State 147

	Literal -> BoolLiteral .                            (rule 102)

	'('            reduce using rule 102
	')'            reduce using rule 102
	','            reduce using rule 102
	':'            reduce using rule 102
	'['            reduce using rule 102
	']'            reduce using rule 102
	L_Ident        reduce using rule 102
	L_integ        reduce using rule 102
	L_BoolLiteral  reduce using rule 102


State 148

	Pattern3 -> ListPattern .                           (rule 92)

	')'            reduce using rule 92


State 149

	Pattern4 -> Pattern5 .                              (rule 91)

	')'            reduce using rule 91
	':'            reduce using rule 91


State 150

	ListPattern -> Pattern4 . ':' Pattern4              (rule 87)
	Pattern3 -> Pattern4 .                              (rule 93)

	')'            reduce using rule 93
	':'            shift, and enter state 165


State 151

	Pattern2 -> Pattern3 .                              (rule 96)

	')'            reduce using rule 96


State 152

	PatternBranch -> '(' Pattern . ')' '>>>' Expr2      (rule 67)

	')'            shift, and enter state 164


State 153

	Pattern -> Pattern1 .                               (rule 94)

	')'            reduce using rule 94


State 154

	Pattern1 -> Pattern2 .                              (rule 95)

	')'            reduce using rule 95


State 155

	Pattern5 -> Literal .                               (rule 88)

	'('            reduce using rule 88
	')'            reduce using rule 88
	':'            reduce using rule 88
	'['            reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_BoolLiteral  reduce using rule 88


State 156

	Pattern5 -> '(' . Pattern ')'                       (rule 89)

	'('            shift, and enter state 156
	'['            shift, and enter state 157
	'[]'           shift, and enter state 158
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 145
	Integer        goto state 146
	BoolLiteral    goto state 147
	ListPattern    goto state 148
	Pattern5       goto state 149
	Pattern4       goto state 150
	Pattern3       goto state 151
	Pattern        goto state 163
	Pattern1       goto state 153
	Pattern2       goto state 154
	Literal        goto state 155

State 157

	Literal -> '[' . ListLiteral ']'                    (rule 103)

	'['            shift, and enter state 157
	']'            reduce using rule 104
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Integer        goto state 146
	BoolLiteral    goto state 147
	Literal        goto state 161
	ListLiteral    goto state 162

State 158

	ListPattern -> '[]' .                               (rule 86)

	')'            reduce using rule 86


State 159

	ListPatternBranch -> PatternBranch ',' . ListPatternBranch    (rule 69)

	'('            shift, and enter state 133

	PatternBranch  goto state 131
	ListPatternBranchgoto state 160

State 160

	ListPatternBranch -> PatternBranch ',' ListPatternBranch .    (rule 69)

	')'            reduce using rule 69
	';'            reduce using rule 69
	'in'           reduce using rule 69


State 161

	ListLiteral -> Literal .                            (rule 105)
	ListLiteral -> Literal . ',' ListLiteral            (rule 106)

	','            shift, and enter state 177
	']'            reduce using rule 105


State 162

	Literal -> '[' ListLiteral . ']'                    (rule 103)

	']'            shift, and enter state 176


State 163

	Pattern5 -> '(' Pattern . ')'                       (rule 89)

	')'            shift, and enter state 175


State 164

	PatternBranch -> '(' Pattern ')' . '>>>' Expr2      (rule 67)

	'>>>'          shift, and enter state 174


State 165

	ListPattern -> Pattern4 ':' . Pattern4              (rule 87)

	'('            shift, and enter state 156
	'['            shift, and enter state 157
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 145
	Integer        goto state 146
	BoolLiteral    goto state 147
	Pattern5       goto state 149
	Pattern4       goto state 173
	Literal        goto state 155

State 166

	Field -> Ident .                                    (rule 98)

	'('            reduce using rule 98
	')'            reduce using rule 98
	':'            reduce using rule 98
	'['            reduce using rule 98
	L_Ident        reduce using rule 98
	L_integ        reduce using rule 98
	L_BoolLiteral  reduce using rule 98


State 167

	Field -> Pattern5 .                                 (rule 97)

	'('            reduce using rule 97
	')'            reduce using rule 97
	':'            reduce using rule 97
	'['            reduce using rule 97
	L_Ident        reduce using rule 97
	L_integ        reduce using rule 97
	L_BoolLiteral  reduce using rule 97


State 168

	ListField -> Field . ListField                      (rule 100)

	'('            shift, and enter state 156
	')'            reduce using rule 99
	':'            reduce using rule 99
	'['            shift, and enter state 157
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 166
	Integer        goto state 146
	BoolLiteral    goto state 147
	Pattern5       goto state 167
	Field          goto state 168
	ListField      goto state 172
	Literal        goto state 155

State 169

	Pattern4 -> Ident ListField .                       (rule 90)

	')'            reduce using rule 90
	':'            reduce using rule 90


State 170

	Expr1 -> 'if' Expr2 'then' Expr2 'else' Expr2 .     (rule 63)

	')'            reduce using rule 63
	';'            reduce using rule 63
	'in'           reduce using rule 63


State 171

	Lambda -> '(lambda' ListTIdent TypeAnnot '=>' Expr ')' .    (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'else'         reduce using rule 34
	'in'           reduce using rule 34
	'then'         reduce using rule 34
	'||'           reduce using rule 34


State 172

	ListField -> Field ListField .                      (rule 100)

	')'            reduce using rule 100
	':'            reduce using rule 100


State 173

	ListPattern -> Pattern4 ':' Pattern4 .              (rule 87)

	')'            reduce using rule 87


State 174

	PatternBranch -> '(' Pattern ')' '>>>' . Expr2      (rule 67)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 179

State 175

	Pattern5 -> '(' Pattern ')' .                       (rule 89)

	'('            reduce using rule 89
	')'            reduce using rule 89
	':'            reduce using rule 89
	'['            reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_BoolLiteral  reduce using rule 89


State 176

	Literal -> '[' ListLiteral ']' .                    (rule 103)

	'('            reduce using rule 103
	')'            reduce using rule 103
	','            reduce using rule 103
	':'            reduce using rule 103
	'['            reduce using rule 103
	']'            reduce using rule 103
	L_Ident        reduce using rule 103
	L_integ        reduce using rule 103
	L_BoolLiteral  reduce using rule 103


State 177

	ListLiteral -> Literal ',' . ListLiteral            (rule 106)

	'['            shift, and enter state 157
	']'            reduce using rule 104
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Integer        goto state 146
	BoolLiteral    goto state 147
	Literal        goto state 161
	ListLiteral    goto state 178

State 178

	ListLiteral -> Literal ',' ListLiteral .            (rule 106)

	']'            reduce using rule 106


State 179

	PatternBranch -> '(' Pattern ')' '>>>' Expr2 .      (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67
	'in'           reduce using rule 67


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 120
Number of terminals: 45
Number of non-terminals: 60
Number of states: 180
