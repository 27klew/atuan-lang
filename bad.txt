-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Atuan/Par.y
-----------------------------------------------------------------------------


rule 23 is unused
rule 24 is unused
rule 27 is unused
rule 61 is unused
rule 62 is unused

terminal '{' is unused
terminal '}' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	BoolLiteral -> L_BoolLiteral                       (3)
	Program -> ListTop                                 (4)
	Top -> Def                                         (5)
	Top -> TypeDef                                     (6)
	Def -> Ident ListOTIdent OptTypeAnnot '=' Expr     (7)
	TIdent -> '(' Ident TypeAnnot ')'                  (8)
	OTIdent -> TIdent                                  (9)
	OTIdent -> Ident                                   (10)
	TypeDef -> 'data' Ident ListTVar 'where' ListConstr   (11)
	TVar -> Ident                                      (12)
	ListTVar ->                                        (13)
	ListTVar -> TVar ListTVar                          (14)
	Constr -> Ident TypeAnnot                          (15)
	ListConstr -> Constr                               (16)
	ListConstr -> Constr ListConstr                    (17)
	TypeAnnot -> '::' Type                             (18)
	OptTypeAnnot -> TypeAnnot                          (19)
	OptTypeAnnot ->                                    (20)
	ListTop -> Top ';'                                 (21)
	ListTop -> Top ';' ListTop                         (22)
	ListIdent -> Ident                                 (23)
	ListIdent -> Ident ListIdent                       (24)
	ListOTIdent ->                                     (25)
	ListOTIdent -> OTIdent ListOTIdent                 (26)
	Block -> '{' Expr '}'                              (27)
	Lambda -> '(lambda' ListOTIdent OptTypeAnnot '=>' Expr ')'   (28)
	Expr8 -> Ident                                     (29)
	Expr8 -> Integer                                   (30)
	Expr8 -> BoolLiteral                               (31)
	Expr8 -> Lambda                                    (32)
	Expr8 -> '[' ListVal ']'                           (33)
	Expr8 -> '(' Expr ')'                              (34)
	Val -> Expr8                                       (35)
	ListVal ->                                         (36)
	ListVal -> Val                                     (37)
	ListVal -> Val ',' ListVal                         (38)
	Expr7 -> Expr8 ListExpr8                           (39)
	Expr7 -> Expr8                                     (40)
	Expr6 -> '-' Expr7                                 (41)
	Expr6 -> '!' Expr7                                 (42)
	Expr6 -> Expr7                                     (43)
	Expr5 -> Expr5 MulOp Expr6                         (44)
	Expr5 -> Expr6                                     (45)
	Expr4 -> Expr4 AddOp Expr5                         (46)
	Expr4 -> Expr5                                     (47)
	Expr3 -> Expr3 RelOp Expr4                         (48)
	Expr3 -> Expr4                                     (49)
	Expr2 -> Expr3 '&&' Expr2                          (50)
	Expr2 -> Expr3                                     (51)
	Expr1 -> Expr2 '||' Expr1                          (52)
	Expr1 -> 'match' Ident 'with' ListPatternBranch    (53)
	Expr1 -> 'if' Expr2 'then' Expr2 'else' Expr2      (54)
	Expr1 -> 'let' Def 'in' Expr2                      (55)
	Expr1 -> Expr2                                     (56)
	PatternBranch -> '(' Pattern ')' '>>>' Expr2       (57)
	ListPatternBranch -> PatternBranch                 (58)
	ListPatternBranch -> PatternBranch ',' ListPatternBranch   (59)
	Expr -> Expr1                                      (60)
	ListExpr ->                                        (61)
	ListExpr -> Expr ListExpr                          (62)
	ListExpr8 -> Expr8                                 (63)
	ListExpr8 -> Expr8 ListExpr8                       (64)
	AddOp -> '+'                                       (65)
	AddOp -> '-'                                       (66)
	MulOp -> '*'                                       (67)
	MulOp -> '/'                                       (68)
	MulOp -> '%'                                       (69)
	RelOp -> '<'                                       (70)
	RelOp -> '<='                                      (71)
	RelOp -> '>'                                       (72)
	RelOp -> '>='                                      (73)
	RelOp -> '=='                                      (74)
	RelOp -> '!='                                      (75)
	ListPattern -> '[]'                                (76)
	ListPattern -> Pattern4 ':' Pattern4               (77)
	Pattern5 -> Literal                                (78)
	Pattern5 -> '(' Pattern ')'                        (79)
	Pattern4 -> Ident ListField                        (80)
	Pattern4 -> Pattern5                               (81)
	Pattern3 -> ListPattern                            (82)
	Pattern3 -> Pattern4                               (83)
	Pattern -> Pattern1                                (84)
	Pattern1 -> Pattern2                               (85)
	Pattern2 -> Pattern3                               (86)
	Field -> Pattern5                                  (87)
	Field -> Ident                                     (88)
	ListField ->                                       (89)
	ListField -> Field ListField                       (90)
	Literal -> Integer                                 (91)
	Literal -> BoolLiteral                             (92)
	Literal -> '[' ListLiteral ']'                     (93)
	ListLiteral ->                                     (94)
	ListLiteral -> Literal                             (95)
	ListLiteral -> Literal ',' ListLiteral             (96)
	Type4 -> 'Int'                                     (97)
	Type4 -> 'Bool'                                    (98)
	Type4 -> '[' Type ']'                              (99)
	Type4 -> Ident                                     (100)
	Type4 -> '(' Type ')'                              (101)
	Type3 -> '(' Ident ListType4 ')'                   (102)
	Type3 -> Type4                                     (103)
	ListType4 -> Type4                                 (104)
	ListType4 -> Type4 ListType4                       (105)
	Type1 -> Type2 '->' Type1                          (106)
	Type1 -> Type2                                     (107)
	Type -> Type1                                      (108)
	Type2 -> Type3                                     (109)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	'(lambda'      { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	':'            { PT _ (TS _ 14) }
	'::'           { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'=>'           { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'>>>'          { PT _ (TS _ 24) }
	'Bool'         { PT _ (TS _ 25) }
	'Int'          { PT _ (TS _ 26) }
	'['            { PT _ (TS _ 27) }
	'[]'           { PT _ (TS _ 28) }
	']'            { PT _ (TS _ 29) }
	'data'         { PT _ (TS _ 30) }
	'else'         { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'in'           { PT _ (TS _ 33) }
	'let'          { PT _ (TS _ 34) }
	'match'        { PT _ (TS _ 35) }
	'then'         { PT _ (TS _ 36) }
	'where'        { PT _ (TS _ 37) }
	'with'         { PT _ (TS _ 38) }
	'{'            { PT _ (TS _ 39) }
	'||'           { PT _ (TS _ 40) }
	'}'            { PT _ (TS _ 41) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_BoolLiteral  { PT _ (T_BoolLiteral _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	BoolLiteral     rule  3
	Program         rule  4
	Top             rules 5, 6
	Def             rule  7
	TIdent          rule  8
	OTIdent         rules 9, 10
	TypeDef         rule  11
	TVar            rule  12
	ListTVar        rules 13, 14
	Constr          rule  15
	ListConstr      rules 16, 17
	TypeAnnot       rule  18
	OptTypeAnnot    rules 19, 20
	ListTop         rules 21, 22
	ListIdent       rules 23, 24
	ListOTIdent     rules 25, 26
	Block           rule  27
	Lambda          rule  28
	Expr8           rules 29, 30, 31, 32, 33, 34
	Val             rule  35
	ListVal         rules 36, 37, 38
	Expr7           rules 39, 40
	Expr6           rules 41, 42, 43
	Expr5           rules 44, 45
	Expr4           rules 46, 47
	Expr3           rules 48, 49
	Expr2           rules 50, 51
	Expr1           rules 52, 53, 54, 55, 56
	PatternBranch   rule  57
	ListPatternBranch rules 58, 59
	Expr            rule  60
	ListExpr        rules 61, 62
	ListExpr8       rules 63, 64
	AddOp           rules 65, 66
	MulOp           rules 67, 68, 69
	RelOp           rules 70, 71, 72, 73, 74, 75
	ListPattern     rules 76, 77
	Pattern5        rules 78, 79
	Pattern4        rules 80, 81
	Pattern3        rules 82, 83
	Pattern         rule  84
	Pattern1        rule  85
	Pattern2        rule  86
	Field           rules 87, 88
	ListField       rules 89, 90
	Literal         rules 91, 92, 93
	ListLiteral     rules 94, 95, 96
	Type4           rules 97, 98, 99, 100, 101
	Type3           rules 102, 103
	ListType4       rules 104, 105
	Type1           rules 106, 107
	Type            rule  108
	Type2           rule  109

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'data'         shift, and enter state 9
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	Top            goto state 5
	Def            goto state 6
	TypeDef        goto state 7
	ListTop        goto state 8

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	'(lambda'      reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'->'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	'::'           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'=>'           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'Bool'         reduce using rule 1
	'Int'          reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'else'         reduce using rule 1
	'in'           reduce using rule 1
	'then'         reduce using rule 1
	'where'        reduce using rule 1
	'with'         reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1
	L_integ        reduce using rule 1
	L_BoolLiteral  reduce using rule 1


State 3

	Def -> Ident . ListOTIdent OptTypeAnnot '=' Expr    (rule 7)

	'('            shift, and enter state 16
	'::'           reduce using rule 25
	'='            reduce using rule 25
	L_Ident        shift, and enter state 2

	Ident          goto state 12
	TIdent         goto state 13
	OTIdent        goto state 14
	ListOTIdent    goto state 15

State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTop -> Top . ';'                                (rule 21)
	ListTop -> Top . ';' ListTop                        (rule 22)

	';'            shift, and enter state 11


State 6

	Top -> Def .                                        (rule 5)

	';'            reduce using rule 5


State 7

	Top -> TypeDef .                                    (rule 6)

	';'            reduce using rule 6


State 8

	Program -> ListTop .                                (rule 4)

	%eof           reduce using rule 4


State 9

	TypeDef -> 'data' . Ident ListTVar 'where' ListConstr    (rule 11)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 10

	TypeDef -> 'data' Ident . ListTVar 'where' ListConstr    (rule 11)

	'where'        reduce using rule 13
	L_Ident        shift, and enter state 2

	Ident          goto state 23
	TVar           goto state 24
	ListTVar       goto state 25

State 11

	ListTop -> Top ';' .                                (rule 21)
	ListTop -> Top ';' . ListTop                        (rule 22)

	'data'         shift, and enter state 9
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 21

	Ident          goto state 3
	Top            goto state 5
	Def            goto state 6
	TypeDef        goto state 7
	ListTop        goto state 22

State 12

	OTIdent -> Ident .                                  (rule 10)

	'('            reduce using rule 10
	'::'           reduce using rule 10
	'='            reduce using rule 10
	'=>'           reduce using rule 10
	L_Ident        reduce using rule 10


State 13

	OTIdent -> TIdent .                                 (rule 9)

	'('            reduce using rule 9
	'::'           reduce using rule 9
	'='            reduce using rule 9
	'=>'           reduce using rule 9
	L_Ident        reduce using rule 9


State 14

	ListOTIdent -> OTIdent . ListOTIdent                (rule 26)

	'('            shift, and enter state 16
	'::'           reduce using rule 25
	'='            reduce using rule 25
	'=>'           reduce using rule 25
	L_Ident        shift, and enter state 2

	Ident          goto state 12
	TIdent         goto state 13
	OTIdent        goto state 14
	ListOTIdent    goto state 21

State 15

	Def -> Ident ListOTIdent . OptTypeAnnot '=' Expr    (rule 7)

	'::'           shift, and enter state 20
	'='            reduce using rule 20

	TypeAnnot      goto state 18
	OptTypeAnnot   goto state 19

State 16

	TIdent -> '(' . Ident TypeAnnot ')'                 (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 17

	TIdent -> '(' Ident . TypeAnnot ')'                 (rule 8)

	'::'           shift, and enter state 20

	TypeAnnot      goto state 39

State 18

	OptTypeAnnot -> TypeAnnot .                         (rule 19)

	'='            reduce using rule 19
	'=>'           reduce using rule 19


State 19

	Def -> Ident ListOTIdent OptTypeAnnot . '=' Expr    (rule 7)

	'='            shift, and enter state 38


State 20

	TypeAnnot -> '::' . Type                            (rule 18)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 31
	Type           goto state 32
	Type2          goto state 33

State 21

	ListOTIdent -> OTIdent ListOTIdent .                (rule 26)

	'::'           reduce using rule 26
	'='            reduce using rule 26
	'=>'           reduce using rule 26


State 22

	ListTop -> Top ';' ListTop .                        (rule 22)

	%eof           reduce using rule 22


State 23

	TVar -> Ident .                                     (rule 12)

	'where'        reduce using rule 12
	L_Ident        reduce using rule 12


State 24

	ListTVar -> TVar . ListTVar                         (rule 14)

	'where'        reduce using rule 13
	L_Ident        shift, and enter state 2

	Ident          goto state 23
	TVar           goto state 24
	ListTVar       goto state 27

State 25

	TypeDef -> 'data' Ident ListTVar . 'where' ListConstr    (rule 11)

	'where'        shift, and enter state 26


State 26

	TypeDef -> 'data' Ident ListTVar 'where' . ListConstr    (rule 11)

	L_Ident        shift, and enter state 2

	Ident          goto state 68
	Constr         goto state 69
	ListConstr     goto state 70

State 27

	ListTVar -> TVar ListTVar .                         (rule 14)

	'where'        reduce using rule 14


State 28

	Type4 -> Ident .                                    (rule 100)

	'('            reduce using rule 100
	')'            reduce using rule 100
	'->'           reduce using rule 100
	';'            reduce using rule 100
	'='            reduce using rule 100
	'=>'           reduce using rule 100
	'Bool'         reduce using rule 100
	'Int'          reduce using rule 100
	'['            reduce using rule 100
	']'            reduce using rule 100
	L_Ident        reduce using rule 100


State 29

	Type3 -> Type4 .                                    (rule 103)

	')'            reduce using rule 103
	'->'           reduce using rule 103
	';'            reduce using rule 103
	'='            reduce using rule 103
	'=>'           reduce using rule 103
	']'            reduce using rule 103
	L_Ident        reduce using rule 103


State 30

	Type2 -> Type3 .                                    (rule 109)

	')'            reduce using rule 109
	'->'           reduce using rule 109
	';'            reduce using rule 109
	'='            reduce using rule 109
	'=>'           reduce using rule 109
	']'            reduce using rule 109
	L_Ident        reduce using rule 109


State 31

	Type -> Type1 .                                     (rule 108)

	')'            reduce using rule 108
	';'            reduce using rule 108
	'='            reduce using rule 108
	'=>'           reduce using rule 108
	']'            reduce using rule 108
	L_Ident        reduce using rule 108


State 32

	TypeAnnot -> '::' Type .                            (rule 18)

	')'            reduce using rule 18
	';'            reduce using rule 18
	'='            reduce using rule 18
	'=>'           reduce using rule 18
	L_Ident        reduce using rule 18


State 33

	Type1 -> Type2 . '->' Type1                         (rule 106)
	Type1 -> Type2 .                                    (rule 107)

	')'            reduce using rule 107
	'->'           shift, and enter state 67
	';'            reduce using rule 107
	'='            reduce using rule 107
	'=>'           reduce using rule 107
	']'            reduce using rule 107
	L_Ident        reduce using rule 107


State 34

	Type4 -> '(' . Type ')'                             (rule 101)
	Type3 -> '(' . Ident ListType4 ')'                  (rule 102)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 65
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 31
	Type           goto state 66
	Type2          goto state 33

State 35

	Type4 -> 'Bool' .                                   (rule 98)

	'('            reduce using rule 98
	')'            reduce using rule 98
	'->'           reduce using rule 98
	';'            reduce using rule 98
	'='            reduce using rule 98
	'=>'           reduce using rule 98
	'Bool'         reduce using rule 98
	'Int'          reduce using rule 98
	'['            reduce using rule 98
	']'            reduce using rule 98
	L_Ident        reduce using rule 98


State 36

	Type4 -> 'Int' .                                    (rule 97)

	'('            reduce using rule 97
	')'            reduce using rule 97
	'->'           reduce using rule 97
	';'            reduce using rule 97
	'='            reduce using rule 97
	'=>'           reduce using rule 97
	'Bool'         reduce using rule 97
	'Int'          reduce using rule 97
	'['            reduce using rule 97
	']'            reduce using rule 97
	L_Ident        reduce using rule 97


State 37

	Type4 -> '[' . Type ']'                             (rule 99)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 31
	Type           goto state 64
	Type2          goto state 33

State 38

	Def -> Ident ListOTIdent OptTypeAnnot '=' . Expr    (rule 7)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	'if'           shift, and enter state 59
	'let'          shift, and enter state 60
	'match'        shift, and enter state 61
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 39

	TIdent -> '(' Ident TypeAnnot . ')'                 (rule 8)

	')'            shift, and enter state 40


State 40

	TIdent -> '(' Ident TypeAnnot ')' .                 (rule 8)

	'('            reduce using rule 8
	'::'           reduce using rule 8
	'='            reduce using rule 8
	'=>'           reduce using rule 8
	L_Ident        reduce using rule 8


State 41

	Expr8 -> Ident .                                    (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&&'           reduce using rule 29
	'('            reduce using rule 29
	'(lambda'      reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'+'            reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'/'            reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	'else'         reduce using rule 29
	'in'           reduce using rule 29
	'then'         reduce using rule 29
	'||'           reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_BoolLiteral  reduce using rule 29


State 42

	Expr8 -> Integer .                                  (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&&'           reduce using rule 30
	'('            reduce using rule 30
	'(lambda'      reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'+'            reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'/'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	'else'         reduce using rule 30
	'in'           reduce using rule 30
	'then'         reduce using rule 30
	'||'           reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_BoolLiteral  reduce using rule 30


State 43

	Expr8 -> BoolLiteral .                              (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	'('            reduce using rule 31
	'(lambda'      reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'/'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	'else'         reduce using rule 31
	'in'           reduce using rule 31
	'then'         reduce using rule 31
	'||'           reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_BoolLiteral  reduce using rule 31


State 44

	Expr8 -> Lambda .                                   (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	'('            reduce using rule 32
	'(lambda'      reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	'else'         reduce using rule 32
	'in'           reduce using rule 32
	'then'         reduce using rule 32
	'||'           reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_BoolLiteral  reduce using rule 32


State 45

	Expr7 -> Expr8 . ListExpr8                          (rule 39)
	Expr7 -> Expr8 .                                    (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            shift, and enter state 58
	'else'         reduce using rule 40
	'in'           reduce using rule 40
	'then'         reduce using rule 40
	'||'           reduce using rule 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 105
	ListExpr8      goto state 106

State 46

	Expr6 -> Expr7 .                                    (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'else'         reduce using rule 43
	'in'           reduce using rule 43
	'then'         reduce using rule 43
	'||'           reduce using rule 43


State 47

	Expr5 -> Expr6 .                                    (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'else'         reduce using rule 45
	'in'           reduce using rule 45
	'then'         reduce using rule 45
	'||'           reduce using rule 45


State 48

	Expr5 -> Expr5 . MulOp Expr6                        (rule 44)
	Expr4 -> Expr5 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            shift, and enter state 102
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            shift, and enter state 103
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            shift, and enter state 104
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'else'         reduce using rule 47
	'in'           reduce using rule 47
	'then'         reduce using rule 47
	'||'           reduce using rule 47

	MulOp          goto state 101

State 49

	Expr4 -> Expr4 . AddOp Expr5                        (rule 46)
	Expr3 -> Expr4 .                                    (rule 49)

	'!='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'+'            shift, and enter state 99
	','            reduce using rule 49
	'-'            shift, and enter state 100
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'else'         reduce using rule 49
	'in'           reduce using rule 49
	'then'         reduce using rule 49
	'||'           reduce using rule 49

	AddOp          goto state 98

State 50

	Expr3 -> Expr3 . RelOp Expr4                        (rule 48)
	Expr2 -> Expr3 . '&&' Expr2                         (rule 50)
	Expr2 -> Expr3 .                                    (rule 51)

	'!='           shift, and enter state 91
	'&&'           shift, and enter state 92
	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'else'         reduce using rule 51
	'in'           reduce using rule 51
	'then'         reduce using rule 51
	'||'           reduce using rule 51

	RelOp          goto state 90

State 51

	Expr1 -> Expr2 . '||' Expr1                         (rule 52)
	Expr1 -> Expr2 .                                    (rule 56)

	')'            reduce using rule 56
	';'            reduce using rule 56
	'in'           reduce using rule 56
	'||'           shift, and enter state 89


State 52

	Expr -> Expr1 .                                     (rule 60)

	')'            reduce using rule 60
	';'            reduce using rule 60
	'in'           reduce using rule 60


State 53

	Def -> Ident ListOTIdent OptTypeAnnot '=' Expr .    (rule 7)

	';'            reduce using rule 7
	'in'           reduce using rule 7


State 54

	Expr6 -> '!' . Expr7                                (rule 42)

	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 88

State 55

	Expr8 -> '(' . Expr ')'                             (rule 34)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	'if'           shift, and enter state 59
	'let'          shift, and enter state 60
	'match'        shift, and enter state 61
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 87

State 56

	Lambda -> '(lambda' . ListOTIdent OptTypeAnnot '=>' Expr ')'    (rule 28)

	'('            shift, and enter state 16
	'::'           reduce using rule 25
	'=>'           reduce using rule 25
	L_Ident        shift, and enter state 2

	Ident          goto state 12
	TIdent         goto state 13
	OTIdent        goto state 14
	ListOTIdent    goto state 86

State 57

	Expr6 -> '-' . Expr7                                (rule 41)

	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 85

State 58

	Expr8 -> '[' . ListVal ']'                          (rule 33)

	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'['            shift, and enter state 58
	']'            reduce using rule 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 82
	Val            goto state 83
	ListVal        goto state 84

State 59

	Expr1 -> 'if' . Expr2 'then' Expr2 'else' Expr2     (rule 54)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 81

State 60

	Expr1 -> 'let' . Def 'in' Expr2                     (rule 55)

	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Def            goto state 80

State 61

	Expr1 -> 'match' . Ident 'with' ListPatternBranch    (rule 53)

	L_Ident        shift, and enter state 2

	Ident          goto state 79

State 62

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	'(lambda'      reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'else'         reduce using rule 2
	'in'           reduce using rule 2
	'then'         reduce using rule 2
	'||'           reduce using rule 2
	L_Ident        reduce using rule 2
	L_integ        reduce using rule 2
	L_BoolLiteral  reduce using rule 2


State 63

	BoolLiteral -> L_BoolLiteral .                      (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	'(lambda'      reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'else'         reduce using rule 3
	'in'           reduce using rule 3
	'then'         reduce using rule 3
	'||'           reduce using rule 3
	L_Ident        reduce using rule 3
	L_integ        reduce using rule 3
	L_BoolLiteral  reduce using rule 3


State 64

	Type4 -> '[' Type . ']'                             (rule 99)

	']'            shift, and enter state 78


State 65

	Type4 -> Ident .                                    (rule 100)
	Type3 -> '(' Ident . ListType4 ')'                  (rule 102)

	'('            shift, and enter state 77
	')'            reduce using rule 100
	'->'           reduce using rule 100
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 75
	ListType4      goto state 76

State 66

	Type4 -> '(' Type . ')'                             (rule 101)

	')'            shift, and enter state 74


State 67

	Type1 -> Type2 '->' . Type1                         (rule 106)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 73
	Type2          goto state 33

State 68

	Constr -> Ident . TypeAnnot                         (rule 15)

	'::'           shift, and enter state 20

	TypeAnnot      goto state 72

State 69

	ListConstr -> Constr .                              (rule 16)
	ListConstr -> Constr . ListConstr                   (rule 17)

	';'            reduce using rule 16
	L_Ident        shift, and enter state 2

	Ident          goto state 68
	Constr         goto state 69
	ListConstr     goto state 71

State 70

	TypeDef -> 'data' Ident ListTVar 'where' ListConstr .    (rule 11)

	';'            reduce using rule 11


State 71

	ListConstr -> Constr ListConstr .                   (rule 17)

	';'            reduce using rule 17


State 72

	Constr -> Ident TypeAnnot .                         (rule 15)

	';'            reduce using rule 15
	L_Ident        reduce using rule 15


State 73

	Type1 -> Type2 '->' Type1 .                         (rule 106)

	')'            reduce using rule 106
	';'            reduce using rule 106
	'='            reduce using rule 106
	'=>'           reduce using rule 106
	']'            reduce using rule 106
	L_Ident        reduce using rule 106


State 74

	Type4 -> '(' Type ')' .                             (rule 101)

	'('            reduce using rule 101
	')'            reduce using rule 101
	'->'           reduce using rule 101
	';'            reduce using rule 101
	'='            reduce using rule 101
	'=>'           reduce using rule 101
	'Bool'         reduce using rule 101
	'Int'          reduce using rule 101
	'['            reduce using rule 101
	']'            reduce using rule 101
	L_Ident        reduce using rule 101


State 75

	ListType4 -> Type4 .                                (rule 104)
	ListType4 -> Type4 . ListType4                      (rule 105)

	'('            shift, and enter state 77
	')'            reduce using rule 104
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 75
	ListType4      goto state 121

State 76

	Type3 -> '(' Ident ListType4 . ')'                  (rule 102)

	')'            shift, and enter state 120


State 77

	Type4 -> '(' . Type ')'                             (rule 101)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 31
	Type           goto state 66
	Type2          goto state 33

State 78

	Type4 -> '[' Type ']' .                             (rule 99)

	'('            reduce using rule 99
	')'            reduce using rule 99
	'->'           reduce using rule 99
	';'            reduce using rule 99
	'='            reduce using rule 99
	'=>'           reduce using rule 99
	'Bool'         reduce using rule 99
	'Int'          reduce using rule 99
	'['            reduce using rule 99
	']'            reduce using rule 99
	L_Ident        reduce using rule 99


State 79

	Expr1 -> 'match' Ident . 'with' ListPatternBranch    (rule 53)

	'with'         shift, and enter state 119


State 80

	Expr1 -> 'let' Def . 'in' Expr2                     (rule 55)

	'in'           shift, and enter state 118


State 81

	Expr1 -> 'if' Expr2 . 'then' Expr2 'else' Expr2     (rule 54)

	'then'         shift, and enter state 117


State 82

	Val -> Expr8 .                                      (rule 35)

	','            reduce using rule 35
	']'            reduce using rule 35


State 83

	ListVal -> Val .                                    (rule 37)
	ListVal -> Val . ',' ListVal                        (rule 38)

	','            shift, and enter state 116
	']'            reduce using rule 37


State 84

	Expr8 -> '[' ListVal . ']'                          (rule 33)

	']'            shift, and enter state 115


State 85

	Expr6 -> '-' Expr7 .                                (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'else'         reduce using rule 41
	'in'           reduce using rule 41
	'then'         reduce using rule 41
	'||'           reduce using rule 41


State 86

	Lambda -> '(lambda' ListOTIdent . OptTypeAnnot '=>' Expr ')'    (rule 28)

	'::'           shift, and enter state 20
	'=>'           reduce using rule 20

	TypeAnnot      goto state 18
	OptTypeAnnot   goto state 114

State 87

	Expr8 -> '(' Expr . ')'                             (rule 34)

	')'            shift, and enter state 113


State 88

	Expr6 -> '!' Expr7 .                                (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'else'         reduce using rule 42
	'in'           reduce using rule 42
	'then'         reduce using rule 42
	'||'           reduce using rule 42


State 89

	Expr1 -> Expr2 '||' . Expr1                         (rule 52)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	'if'           shift, and enter state 59
	'let'          shift, and enter state 60
	'match'        shift, and enter state 61
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 112

State 90

	Expr3 -> Expr3 RelOp . Expr4                        (rule 48)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 111

State 91

	RelOp -> '!=' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'(lambda'      reduce using rule 75
	'-'            reduce using rule 75
	'['            reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_BoolLiteral  reduce using rule 75


State 92

	Expr2 -> Expr3 '&&' . Expr2                         (rule 50)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 110

State 93

	RelOp -> '<' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'(lambda'      reduce using rule 70
	'-'            reduce using rule 70
	'['            reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_BoolLiteral  reduce using rule 70


State 94

	RelOp -> '<=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'(lambda'      reduce using rule 71
	'-'            reduce using rule 71
	'['            reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_BoolLiteral  reduce using rule 71


State 95

	RelOp -> '==' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'(lambda'      reduce using rule 74
	'-'            reduce using rule 74
	'['            reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_BoolLiteral  reduce using rule 74


State 96

	RelOp -> '>' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'(lambda'      reduce using rule 72
	'-'            reduce using rule 72
	'['            reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_BoolLiteral  reduce using rule 72


State 97

	RelOp -> '>=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'(lambda'      reduce using rule 73
	'-'            reduce using rule 73
	'['            reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_BoolLiteral  reduce using rule 73


State 98

	Expr4 -> Expr4 AddOp . Expr5                        (rule 46)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 109

State 99

	AddOp -> '+' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'(lambda'      reduce using rule 65
	'-'            reduce using rule 65
	'['            reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_BoolLiteral  reduce using rule 65


State 100

	AddOp -> '-' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'(lambda'      reduce using rule 66
	'-'            reduce using rule 66
	'['            reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_BoolLiteral  reduce using rule 66


State 101

	Expr5 -> Expr5 MulOp . Expr6                        (rule 44)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 108

State 102

	MulOp -> '%' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'(lambda'      reduce using rule 69
	'-'            reduce using rule 69
	'['            reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_BoolLiteral  reduce using rule 69


State 103

	MulOp -> '*' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'(lambda'      reduce using rule 67
	'-'            reduce using rule 67
	'['            reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_BoolLiteral  reduce using rule 67


State 104

	MulOp -> '/' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'(lambda'      reduce using rule 68
	'-'            reduce using rule 68
	'['            reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_BoolLiteral  reduce using rule 68


State 105

	ListExpr8 -> Expr8 .                                (rule 63)
	ListExpr8 -> Expr8 . ListExpr8                      (rule 64)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            shift, and enter state 58
	'else'         reduce using rule 63
	'in'           reduce using rule 63
	'then'         reduce using rule 63
	'||'           reduce using rule 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 105
	ListExpr8      goto state 107

State 106

	Expr7 -> Expr8 ListExpr8 .                          (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'else'         reduce using rule 39
	'in'           reduce using rule 39
	'then'         reduce using rule 39
	'||'           reduce using rule 39


State 107

	ListExpr8 -> Expr8 ListExpr8 .                      (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'else'         reduce using rule 64
	'in'           reduce using rule 64
	'then'         reduce using rule 64
	'||'           reduce using rule 64


State 108

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'else'         reduce using rule 44
	'in'           reduce using rule 44
	'then'         reduce using rule 44
	'||'           reduce using rule 44


State 109

	Expr5 -> Expr5 . MulOp Expr6                        (rule 44)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 46)

	'!='           reduce using rule 46
	'%'            shift, and enter state 102
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            shift, and enter state 103
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            shift, and enter state 104
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'else'         reduce using rule 46
	'in'           reduce using rule 46
	'then'         reduce using rule 46
	'||'           reduce using rule 46

	MulOp          goto state 101

State 110

	Expr2 -> Expr3 '&&' Expr2 .                         (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'else'         reduce using rule 50
	'in'           reduce using rule 50
	'then'         reduce using rule 50
	'||'           reduce using rule 50


State 111

	Expr4 -> Expr4 . AddOp Expr5                        (rule 46)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 48)

	'!='           reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'+'            shift, and enter state 99
	','            reduce using rule 48
	'-'            shift, and enter state 100
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'else'         reduce using rule 48
	'in'           reduce using rule 48
	'then'         reduce using rule 48
	'||'           reduce using rule 48

	AddOp          goto state 98

State 112

	Expr1 -> Expr2 '||' Expr1 .                         (rule 52)

	')'            reduce using rule 52
	';'            reduce using rule 52
	'in'           reduce using rule 52


State 113

	Expr8 -> '(' Expr ')' .                             (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	'('            reduce using rule 34
	'(lambda'      reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	'else'         reduce using rule 34
	'in'           reduce using rule 34
	'then'         reduce using rule 34
	'||'           reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_BoolLiteral  reduce using rule 34


State 114

	Lambda -> '(lambda' ListOTIdent OptTypeAnnot . '=>' Expr ')'    (rule 28)

	'=>'           shift, and enter state 128


State 115

	Expr8 -> '[' ListVal ']' .                          (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	'('            reduce using rule 33
	'(lambda'      reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	'else'         reduce using rule 33
	'in'           reduce using rule 33
	'then'         reduce using rule 33
	'||'           reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_BoolLiteral  reduce using rule 33


State 116

	ListVal -> Val ',' . ListVal                        (rule 38)

	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'['            shift, and enter state 58
	']'            reduce using rule 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 82
	Val            goto state 83
	ListVal        goto state 127

State 117

	Expr1 -> 'if' Expr2 'then' . Expr2 'else' Expr2     (rule 54)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 126

State 118

	Expr1 -> 'let' Def 'in' . Expr2                     (rule 55)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 125

State 119

	Expr1 -> 'match' Ident 'with' . ListPatternBranch    (rule 53)

	'('            shift, and enter state 124

	PatternBranch  goto state 122
	ListPatternBranchgoto state 123

State 120

	Type3 -> '(' Ident ListType4 ')' .                  (rule 102)

	')'            reduce using rule 102
	'->'           reduce using rule 102
	';'            reduce using rule 102
	'='            reduce using rule 102
	'=>'           reduce using rule 102
	']'            reduce using rule 102
	L_Ident        reduce using rule 102


State 121

	ListType4 -> Type4 ListType4 .                      (rule 105)

	')'            reduce using rule 105


State 122

	ListPatternBranch -> PatternBranch .                (rule 58)
	ListPatternBranch -> PatternBranch . ',' ListPatternBranch    (rule 59)

	')'            reduce using rule 58
	','            shift, and enter state 145
	';'            reduce using rule 58
	'in'           reduce using rule 58


State 123

	Expr1 -> 'match' Ident 'with' ListPatternBranch .    (rule 53)

	')'            reduce using rule 53
	';'            reduce using rule 53
	'in'           reduce using rule 53


State 124

	PatternBranch -> '(' . Pattern ')' '>>>' Expr2      (rule 57)

	'('            shift, and enter state 142
	'['            shift, and enter state 143
	'[]'           shift, and enter state 144
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 131
	Integer        goto state 132
	BoolLiteral    goto state 133
	ListPattern    goto state 134
	Pattern5       goto state 135
	Pattern4       goto state 136
	Pattern3       goto state 137
	Pattern        goto state 138
	Pattern1       goto state 139
	Pattern2       goto state 140
	Literal        goto state 141

State 125

	Expr1 -> 'let' Def 'in' Expr2 .                     (rule 55)

	')'            reduce using rule 55
	';'            reduce using rule 55
	'in'           reduce using rule 55


State 126

	Expr1 -> 'if' Expr2 'then' Expr2 . 'else' Expr2     (rule 54)

	'else'         shift, and enter state 130


State 127

	ListVal -> Val ',' ListVal .                        (rule 38)

	']'            reduce using rule 38


State 128

	Lambda -> '(lambda' ListOTIdent OptTypeAnnot '=>' . Expr ')'    (rule 28)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	'if'           shift, and enter state 59
	'let'          shift, and enter state 60
	'match'        shift, and enter state 61
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 129

State 129

	Lambda -> '(lambda' ListOTIdent OptTypeAnnot '=>' Expr . ')'    (rule 28)

	')'            shift, and enter state 157


State 130

	Expr1 -> 'if' Expr2 'then' Expr2 'else' . Expr2     (rule 54)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 156

State 131

	Pattern4 -> Ident . ListField                       (rule 80)

	'('            shift, and enter state 142
	')'            reduce using rule 89
	':'            reduce using rule 89
	'['            shift, and enter state 143
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 152
	Integer        goto state 132
	BoolLiteral    goto state 133
	Pattern5       goto state 153
	Field          goto state 154
	ListField      goto state 155
	Literal        goto state 141

State 132

	Literal -> Integer .                                (rule 91)

	'('            reduce using rule 91
	')'            reduce using rule 91
	','            reduce using rule 91
	':'            reduce using rule 91
	'['            reduce using rule 91
	']'            reduce using rule 91
	L_Ident        reduce using rule 91
	L_integ        reduce using rule 91
	L_BoolLiteral  reduce using rule 91


State 133

	Literal -> BoolLiteral .                            (rule 92)

	'('            reduce using rule 92
	')'            reduce using rule 92
	','            reduce using rule 92
	':'            reduce using rule 92
	'['            reduce using rule 92
	']'            reduce using rule 92
	L_Ident        reduce using rule 92
	L_integ        reduce using rule 92
	L_BoolLiteral  reduce using rule 92


State 134

	Pattern3 -> ListPattern .                           (rule 82)

	')'            reduce using rule 82


State 135

	Pattern4 -> Pattern5 .                              (rule 81)

	')'            reduce using rule 81
	':'            reduce using rule 81


State 136

	ListPattern -> Pattern4 . ':' Pattern4              (rule 77)
	Pattern3 -> Pattern4 .                              (rule 83)

	')'            reduce using rule 83
	':'            shift, and enter state 151


State 137

	Pattern2 -> Pattern3 .                              (rule 86)

	')'            reduce using rule 86


State 138

	PatternBranch -> '(' Pattern . ')' '>>>' Expr2      (rule 57)

	')'            shift, and enter state 150


State 139

	Pattern -> Pattern1 .                               (rule 84)

	')'            reduce using rule 84


State 140

	Pattern1 -> Pattern2 .                              (rule 85)

	')'            reduce using rule 85


State 141

	Pattern5 -> Literal .                               (rule 78)

	'('            reduce using rule 78
	')'            reduce using rule 78
	':'            reduce using rule 78
	'['            reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_BoolLiteral  reduce using rule 78


State 142

	Pattern5 -> '(' . Pattern ')'                       (rule 79)

	'('            shift, and enter state 142
	'['            shift, and enter state 143
	'[]'           shift, and enter state 144
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 131
	Integer        goto state 132
	BoolLiteral    goto state 133
	ListPattern    goto state 134
	Pattern5       goto state 135
	Pattern4       goto state 136
	Pattern3       goto state 137
	Pattern        goto state 149
	Pattern1       goto state 139
	Pattern2       goto state 140
	Literal        goto state 141

State 143

	Literal -> '[' . ListLiteral ']'                    (rule 93)

	'['            shift, and enter state 143
	']'            reduce using rule 94
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Integer        goto state 132
	BoolLiteral    goto state 133
	Literal        goto state 147
	ListLiteral    goto state 148

State 144

	ListPattern -> '[]' .                               (rule 76)

	')'            reduce using rule 76


State 145

	ListPatternBranch -> PatternBranch ',' . ListPatternBranch    (rule 59)

	'('            shift, and enter state 124

	PatternBranch  goto state 122
	ListPatternBranchgoto state 146

State 146

	ListPatternBranch -> PatternBranch ',' ListPatternBranch .    (rule 59)

	')'            reduce using rule 59
	';'            reduce using rule 59
	'in'           reduce using rule 59


State 147

	ListLiteral -> Literal .                            (rule 95)
	ListLiteral -> Literal . ',' ListLiteral            (rule 96)

	','            shift, and enter state 163
	']'            reduce using rule 95


State 148

	Literal -> '[' ListLiteral . ']'                    (rule 93)

	']'            shift, and enter state 162


State 149

	Pattern5 -> '(' Pattern . ')'                       (rule 79)

	')'            shift, and enter state 161


State 150

	PatternBranch -> '(' Pattern ')' . '>>>' Expr2      (rule 57)

	'>>>'          shift, and enter state 160


State 151

	ListPattern -> Pattern4 ':' . Pattern4              (rule 77)

	'('            shift, and enter state 142
	'['            shift, and enter state 143
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 131
	Integer        goto state 132
	BoolLiteral    goto state 133
	Pattern5       goto state 135
	Pattern4       goto state 159
	Literal        goto state 141

State 152

	Field -> Ident .                                    (rule 88)

	'('            reduce using rule 88
	')'            reduce using rule 88
	':'            reduce using rule 88
	'['            reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_BoolLiteral  reduce using rule 88


State 153

	Field -> Pattern5 .                                 (rule 87)

	'('            reduce using rule 87
	')'            reduce using rule 87
	':'            reduce using rule 87
	'['            reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_BoolLiteral  reduce using rule 87


State 154

	ListField -> Field . ListField                      (rule 90)

	'('            shift, and enter state 142
	')'            reduce using rule 89
	':'            reduce using rule 89
	'['            shift, and enter state 143
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 152
	Integer        goto state 132
	BoolLiteral    goto state 133
	Pattern5       goto state 153
	Field          goto state 154
	ListField      goto state 158
	Literal        goto state 141

State 155

	Pattern4 -> Ident ListField .                       (rule 80)

	')'            reduce using rule 80
	':'            reduce using rule 80


State 156

	Expr1 -> 'if' Expr2 'then' Expr2 'else' Expr2 .     (rule 54)

	')'            reduce using rule 54
	';'            reduce using rule 54
	'in'           reduce using rule 54


State 157

	Lambda -> '(lambda' ListOTIdent OptTypeAnnot '=>' Expr ')' .    (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&&'           reduce using rule 28
	'('            reduce using rule 28
	'(lambda'      reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'/'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	'else'         reduce using rule 28
	'in'           reduce using rule 28
	'then'         reduce using rule 28
	'||'           reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_BoolLiteral  reduce using rule 28


State 158

	ListField -> Field ListField .                      (rule 90)

	')'            reduce using rule 90
	':'            reduce using rule 90


State 159

	ListPattern -> Pattern4 ':' Pattern4 .              (rule 77)

	')'            reduce using rule 77


State 160

	PatternBranch -> '(' Pattern ')' '>>>' . Expr2      (rule 57)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'(lambda'      shift, and enter state 56
	'-'            shift, and enter state 57
	'['            shift, and enter state 58
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr8          goto state 45
	Expr7          goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 165

State 161

	Pattern5 -> '(' Pattern ')' .                       (rule 79)

	'('            reduce using rule 79
	')'            reduce using rule 79
	':'            reduce using rule 79
	'['            reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_BoolLiteral  reduce using rule 79


State 162

	Literal -> '[' ListLiteral ']' .                    (rule 93)

	'('            reduce using rule 93
	')'            reduce using rule 93
	','            reduce using rule 93
	':'            reduce using rule 93
	'['            reduce using rule 93
	']'            reduce using rule 93
	L_Ident        reduce using rule 93
	L_integ        reduce using rule 93
	L_BoolLiteral  reduce using rule 93


State 163

	ListLiteral -> Literal ',' . ListLiteral            (rule 96)

	'['            shift, and enter state 143
	']'            reduce using rule 94
	L_integ        shift, and enter state 62
	L_BoolLiteral  shift, and enter state 63

	Integer        goto state 132
	BoolLiteral    goto state 133
	Literal        goto state 147
	ListLiteral    goto state 164

State 164

	ListLiteral -> Literal ',' ListLiteral .            (rule 96)

	']'            reduce using rule 96


State 165

	PatternBranch -> '(' Pattern ')' '>>>' Expr2 .      (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'in'           reduce using rule 57


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 110
Number of terminals: 44
Number of non-terminals: 56
Number of states: 166
