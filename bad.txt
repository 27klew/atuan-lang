-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Atuan/Par.y
-----------------------------------------------------------------------------


rule 23 is unused
rule 24 is unused
rule 27 is unused
rule 64 is unused
rule 65 is unused

terminal '{' is unused
terminal '}' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	BoolLiteral -> L_BoolLiteral                       (3)
	Program -> ListTop                                 (4)
	Top -> Def                                         (5)
	Top -> TypeDef                                     (6)
	Def -> Ident ListOTIdent OptTypeAnnot '=' Expr     (7)
	TIdent -> '(' Ident TypeAnnot ')'                  (8)
	OTIdent -> TIdent                                  (9)
	OTIdent -> Ident                                   (10)
	TypeDef -> 'data' Ident ListTVar 'where' ListConstr   (11)
	TVar -> Ident                                      (12)
	ListTVar ->                                        (13)
	ListTVar -> TVar ListTVar                          (14)
	Constr -> Ident TypeAnnot                          (15)
	ListConstr -> Constr                               (16)
	ListConstr -> Constr ListConstr                    (17)
	TypeAnnot -> '::' Type                             (18)
	OptTypeAnnot -> TypeAnnot                          (19)
	OptTypeAnnot ->                                    (20)
	ListTop -> Top ';'                                 (21)
	ListTop -> Top ';' ListTop                         (22)
	ListIdent -> Ident                                 (23)
	ListIdent -> Ident ListIdent                       (24)
	ListOTIdent ->                                     (25)
	ListOTIdent -> OTIdent ListOTIdent                 (26)
	Block -> '{' Expr '}'                              (27)
	Lambda -> '(lambda' ListOTIdent OptTypeAnnot '=>' Expr ')'   (28)
	Expr9 -> Ident                                     (29)
	Expr9 -> Integer                                   (30)
	Expr9 -> BoolLiteral                               (31)
	Expr9 -> '[' ListVal ']'                           (32)
	Expr9 -> '(' Expr ')'                              (33)
	Expr8 -> Lambda                                    (34)
	Expr8 -> Expr9                                     (35)
	Expr8 -> Expr9 ':' Expr9                           (36)
	Val -> Expr9                                       (37)
	ListVal ->                                         (38)
	ListVal -> Val                                     (39)
	ListVal -> Val ',' ListVal                         (40)
	Expr7 -> Expr9 ListExpr9                           (41)
	Expr7 -> Expr8                                     (42)
	Expr6 -> '-' Expr7                                 (43)
	Expr6 -> '!' Expr7                                 (44)
	Expr6 -> Expr7                                     (45)
	Expr5 -> Expr5 MulOp Expr6                         (46)
	Expr5 -> Expr6                                     (47)
	Expr4 -> Expr4 AddOp Expr5                         (48)
	Expr4 -> Expr5                                     (49)
	Expr3 -> Expr3 RelOp Expr4                         (50)
	Expr3 -> Expr4                                     (51)
	Expr2 -> Expr3 '&&' Expr2                          (52)
	Expr2 -> Expr3                                     (53)
	Expr1 -> Expr2 '||' Expr1                          (54)
	Expr1 -> 'match' Ident 'with' ListPatternBranch    (55)
	Expr1 -> 'if' Expr2 'then' Expr2 'else' Expr2      (56)
	Expr1 -> 'let' Def 'in' Expr2                      (57)
	Expr1 -> 'letrec' Def 'in' Expr2                   (58)
	Expr1 -> Expr2                                     (59)
	PatternBranch -> '(' Pattern ')' '>>>' Expr2       (60)
	ListPatternBranch -> PatternBranch                 (61)
	ListPatternBranch -> PatternBranch ',' ListPatternBranch   (62)
	Expr -> Expr1                                      (63)
	ListExpr ->                                        (64)
	ListExpr -> Expr ListExpr                          (65)
	ListExpr9 -> Expr9                                 (66)
	ListExpr9 -> Expr9 ListExpr9                       (67)
	AddOp -> '+'                                       (68)
	AddOp -> '-'                                       (69)
	MulOp -> '*'                                       (70)
	MulOp -> '/'                                       (71)
	MulOp -> '%'                                       (72)
	RelOp -> '<'                                       (73)
	RelOp -> '<='                                      (74)
	RelOp -> '>'                                       (75)
	RelOp -> '>='                                      (76)
	RelOp -> '=='                                      (77)
	RelOp -> '!='                                      (78)
	ListPattern -> '[]'                                (79)
	ListPattern -> Pattern4 ':' Pattern4               (80)
	Pattern5 -> Literal                                (81)
	Pattern5 -> '(' Pattern ')'                        (82)
	Pattern4 -> Ident ListField                        (83)
	Pattern4 -> Pattern5                               (84)
	Pattern3 -> ListPattern                            (85)
	Pattern3 -> Pattern4                               (86)
	Pattern -> Pattern1                                (87)
	Pattern1 -> Pattern2                               (88)
	Pattern2 -> Pattern3                               (89)
	Field -> Pattern5                                  (90)
	Field -> Ident                                     (91)
	ListField ->                                       (92)
	ListField -> Field ListField                       (93)
	Literal -> Integer                                 (94)
	Literal -> BoolLiteral                             (95)
	Literal -> '[' ListLiteral ']'                     (96)
	ListLiteral ->                                     (97)
	ListLiteral -> Literal                             (98)
	ListLiteral -> Literal ',' ListLiteral             (99)
	Type4 -> 'Int'                                     (100)
	Type4 -> 'Bool'                                    (101)
	Type4 -> '[' Type ']'                              (102)
	Type4 -> Ident                                     (103)
	Type4 -> '(' Type ')'                              (104)
	Type3 -> '(' Ident ListType4 ')'                   (105)
	Type3 -> Type4                                     (106)
	ListType4 -> Type4                                 (107)
	ListType4 -> Type4 ListType4                       (108)
	Type1 -> Type2 '->' Type1                          (109)
	Type1 -> Type2                                     (110)
	Type -> Type1                                      (111)
	Type2 -> Type3                                     (112)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	'(lambda'      { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	':'            { PT _ (TS _ 14) }
	'::'           { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'=>'           { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'>>>'          { PT _ (TS _ 24) }
	'Bool'         { PT _ (TS _ 25) }
	'Int'          { PT _ (TS _ 26) }
	'['            { PT _ (TS _ 27) }
	'[]'           { PT _ (TS _ 28) }
	']'            { PT _ (TS _ 29) }
	'data'         { PT _ (TS _ 30) }
	'else'         { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'in'           { PT _ (TS _ 33) }
	'let'          { PT _ (TS _ 34) }
	'letrec'       { PT _ (TS _ 35) }
	'match'        { PT _ (TS _ 36) }
	'then'         { PT _ (TS _ 37) }
	'where'        { PT _ (TS _ 38) }
	'with'         { PT _ (TS _ 39) }
	'{'            { PT _ (TS _ 40) }
	'||'           { PT _ (TS _ 41) }
	'}'            { PT _ (TS _ 42) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_BoolLiteral  { PT _ (T_BoolLiteral _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	BoolLiteral     rule  3
	Program         rule  4
	Top             rules 5, 6
	Def             rule  7
	TIdent          rule  8
	OTIdent         rules 9, 10
	TypeDef         rule  11
	TVar            rule  12
	ListTVar        rules 13, 14
	Constr          rule  15
	ListConstr      rules 16, 17
	TypeAnnot       rule  18
	OptTypeAnnot    rules 19, 20
	ListTop         rules 21, 22
	ListIdent       rules 23, 24
	ListOTIdent     rules 25, 26
	Block           rule  27
	Lambda          rule  28
	Expr9           rules 29, 30, 31, 32, 33
	Expr8           rules 34, 35, 36
	Val             rule  37
	ListVal         rules 38, 39, 40
	Expr7           rules 41, 42
	Expr6           rules 43, 44, 45
	Expr5           rules 46, 47
	Expr4           rules 48, 49
	Expr3           rules 50, 51
	Expr2           rules 52, 53
	Expr1           rules 54, 55, 56, 57, 58, 59
	PatternBranch   rule  60
	ListPatternBranch rules 61, 62
	Expr            rule  63
	ListExpr        rules 64, 65
	ListExpr9       rules 66, 67
	AddOp           rules 68, 69
	MulOp           rules 70, 71, 72
	RelOp           rules 73, 74, 75, 76, 77, 78
	ListPattern     rules 79, 80
	Pattern5        rules 81, 82
	Pattern4        rules 83, 84
	Pattern3        rules 85, 86
	Pattern         rule  87
	Pattern1        rule  88
	Pattern2        rule  89
	Field           rules 90, 91
	ListField       rules 92, 93
	Literal         rules 94, 95, 96
	ListLiteral     rules 97, 98, 99
	Type4           rules 100, 101, 102, 103, 104
	Type3           rules 105, 106
	ListType4       rules 107, 108
	Type1           rules 109, 110
	Type            rule  111
	Type2           rule  112

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'data'         shift, and enter state 9
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	Top            goto state 5
	Def            goto state 6
	TypeDef        goto state 7
	ListTop        goto state 8

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'->'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	'::'           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'=>'           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'Bool'         reduce using rule 1
	'Int'          reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'else'         reduce using rule 1
	'in'           reduce using rule 1
	'then'         reduce using rule 1
	'where'        reduce using rule 1
	'with'         reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1
	L_integ        reduce using rule 1
	L_BoolLiteral  reduce using rule 1


State 3

	Def -> Ident . ListOTIdent OptTypeAnnot '=' Expr    (rule 7)

	'('            shift, and enter state 16
	'::'           reduce using rule 25
	'='            reduce using rule 25
	L_Ident        shift, and enter state 2

	Ident          goto state 12
	TIdent         goto state 13
	OTIdent        goto state 14
	ListOTIdent    goto state 15

State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTop -> Top . ';'                                (rule 21)
	ListTop -> Top . ';' ListTop                        (rule 22)

	';'            shift, and enter state 11


State 6

	Top -> Def .                                        (rule 5)

	';'            reduce using rule 5


State 7

	Top -> TypeDef .                                    (rule 6)

	';'            reduce using rule 6


State 8

	Program -> ListTop .                                (rule 4)

	%eof           reduce using rule 4


State 9

	TypeDef -> 'data' . Ident ListTVar 'where' ListConstr    (rule 11)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 10

	TypeDef -> 'data' Ident . ListTVar 'where' ListConstr    (rule 11)

	'where'        reduce using rule 13
	L_Ident        shift, and enter state 2

	Ident          goto state 23
	TVar           goto state 24
	ListTVar       goto state 25

State 11

	ListTop -> Top ';' .                                (rule 21)
	ListTop -> Top ';' . ListTop                        (rule 22)

	'data'         shift, and enter state 9
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 21

	Ident          goto state 3
	Top            goto state 5
	Def            goto state 6
	TypeDef        goto state 7
	ListTop        goto state 22

State 12

	OTIdent -> Ident .                                  (rule 10)

	'('            reduce using rule 10
	'::'           reduce using rule 10
	'='            reduce using rule 10
	'=>'           reduce using rule 10
	L_Ident        reduce using rule 10


State 13

	OTIdent -> TIdent .                                 (rule 9)

	'('            reduce using rule 9
	'::'           reduce using rule 9
	'='            reduce using rule 9
	'=>'           reduce using rule 9
	L_Ident        reduce using rule 9


State 14

	ListOTIdent -> OTIdent . ListOTIdent                (rule 26)

	'('            shift, and enter state 16
	'::'           reduce using rule 25
	'='            reduce using rule 25
	'=>'           reduce using rule 25
	L_Ident        shift, and enter state 2

	Ident          goto state 12
	TIdent         goto state 13
	OTIdent        goto state 14
	ListOTIdent    goto state 21

State 15

	Def -> Ident ListOTIdent . OptTypeAnnot '=' Expr    (rule 7)

	'::'           shift, and enter state 20
	'='            reduce using rule 20

	TypeAnnot      goto state 18
	OptTypeAnnot   goto state 19

State 16

	TIdent -> '(' . Ident TypeAnnot ')'                 (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 17

	TIdent -> '(' Ident . TypeAnnot ')'                 (rule 8)

	'::'           shift, and enter state 20

	TypeAnnot      goto state 39

State 18

	OptTypeAnnot -> TypeAnnot .                         (rule 19)

	'='            reduce using rule 19
	'=>'           reduce using rule 19


State 19

	Def -> Ident ListOTIdent OptTypeAnnot . '=' Expr    (rule 7)

	'='            shift, and enter state 38


State 20

	TypeAnnot -> '::' . Type                            (rule 18)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 31
	Type           goto state 32
	Type2          goto state 33

State 21

	ListOTIdent -> OTIdent ListOTIdent .                (rule 26)

	'::'           reduce using rule 26
	'='            reduce using rule 26
	'=>'           reduce using rule 26


State 22

	ListTop -> Top ';' ListTop .                        (rule 22)

	%eof           reduce using rule 22


State 23

	TVar -> Ident .                                     (rule 12)

	'where'        reduce using rule 12
	L_Ident        reduce using rule 12


State 24

	ListTVar -> TVar . ListTVar                         (rule 14)

	'where'        reduce using rule 13
	L_Ident        shift, and enter state 2

	Ident          goto state 23
	TVar           goto state 24
	ListTVar       goto state 27

State 25

	TypeDef -> 'data' Ident ListTVar . 'where' ListConstr    (rule 11)

	'where'        shift, and enter state 26


State 26

	TypeDef -> 'data' Ident ListTVar 'where' . ListConstr    (rule 11)

	L_Ident        shift, and enter state 2

	Ident          goto state 70
	Constr         goto state 71
	ListConstr     goto state 72

State 27

	ListTVar -> TVar ListTVar .                         (rule 14)

	'where'        reduce using rule 14


State 28

	Type4 -> Ident .                                    (rule 103)

	'('            reduce using rule 103
	')'            reduce using rule 103
	'->'           reduce using rule 103
	';'            reduce using rule 103
	'='            reduce using rule 103
	'=>'           reduce using rule 103
	'Bool'         reduce using rule 103
	'Int'          reduce using rule 103
	'['            reduce using rule 103
	']'            reduce using rule 103
	L_Ident        reduce using rule 103


State 29

	Type3 -> Type4 .                                    (rule 106)

	')'            reduce using rule 106
	'->'           reduce using rule 106
	';'            reduce using rule 106
	'='            reduce using rule 106
	'=>'           reduce using rule 106
	']'            reduce using rule 106
	L_Ident        reduce using rule 106


State 30

	Type2 -> Type3 .                                    (rule 112)

	')'            reduce using rule 112
	'->'           reduce using rule 112
	';'            reduce using rule 112
	'='            reduce using rule 112
	'=>'           reduce using rule 112
	']'            reduce using rule 112
	L_Ident        reduce using rule 112


State 31

	Type -> Type1 .                                     (rule 111)

	')'            reduce using rule 111
	';'            reduce using rule 111
	'='            reduce using rule 111
	'=>'           reduce using rule 111
	']'            reduce using rule 111
	L_Ident        reduce using rule 111


State 32

	TypeAnnot -> '::' Type .                            (rule 18)

	')'            reduce using rule 18
	';'            reduce using rule 18
	'='            reduce using rule 18
	'=>'           reduce using rule 18
	L_Ident        reduce using rule 18


State 33

	Type1 -> Type2 . '->' Type1                         (rule 109)
	Type1 -> Type2 .                                    (rule 110)

	')'            reduce using rule 110
	'->'           shift, and enter state 69
	';'            reduce using rule 110
	'='            reduce using rule 110
	'=>'           reduce using rule 110
	']'            reduce using rule 110
	L_Ident        reduce using rule 110


State 34

	Type4 -> '(' . Type ')'                             (rule 104)
	Type3 -> '(' . Ident ListType4 ')'                  (rule 105)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 67
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 31
	Type           goto state 68
	Type2          goto state 33

State 35

	Type4 -> 'Bool' .                                   (rule 101)

	'('            reduce using rule 101
	')'            reduce using rule 101
	'->'           reduce using rule 101
	';'            reduce using rule 101
	'='            reduce using rule 101
	'=>'           reduce using rule 101
	'Bool'         reduce using rule 101
	'Int'          reduce using rule 101
	'['            reduce using rule 101
	']'            reduce using rule 101
	L_Ident        reduce using rule 101


State 36

	Type4 -> 'Int' .                                    (rule 100)

	'('            reduce using rule 100
	')'            reduce using rule 100
	'->'           reduce using rule 100
	';'            reduce using rule 100
	'='            reduce using rule 100
	'=>'           reduce using rule 100
	'Bool'         reduce using rule 100
	'Int'          reduce using rule 100
	'['            reduce using rule 100
	']'            reduce using rule 100
	L_Ident        reduce using rule 100


State 37

	Type4 -> '[' . Type ']'                             (rule 102)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 31
	Type           goto state 66
	Type2          goto state 33

State 38

	Def -> Ident ListOTIdent OptTypeAnnot '=' . Expr    (rule 7)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54

State 39

	TIdent -> '(' Ident TypeAnnot . ')'                 (rule 8)

	')'            shift, and enter state 40


State 40

	TIdent -> '(' Ident TypeAnnot ')' .                 (rule 8)

	'('            reduce using rule 8
	'::'           reduce using rule 8
	'='            reduce using rule 8
	'=>'           reduce using rule 8
	L_Ident        reduce using rule 8


State 41

	Expr9 -> Ident .                                    (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&&'           reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'+'            reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'/'            reduce using rule 29
	':'            reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	'else'         reduce using rule 29
	'in'           reduce using rule 29
	'then'         reduce using rule 29
	'||'           reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_BoolLiteral  reduce using rule 29


State 42

	Expr9 -> Integer .                                  (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&&'           reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'+'            reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'/'            reduce using rule 30
	':'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	'else'         reduce using rule 30
	'in'           reduce using rule 30
	'then'         reduce using rule 30
	'||'           reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_BoolLiteral  reduce using rule 30


State 43

	Expr9 -> BoolLiteral .                              (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'/'            reduce using rule 31
	':'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	'else'         reduce using rule 31
	'in'           reduce using rule 31
	'then'         reduce using rule 31
	'||'           reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_BoolLiteral  reduce using rule 31


State 44

	Expr8 -> Lambda .                                   (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'else'         reduce using rule 34
	'in'           reduce using rule 34
	'then'         reduce using rule 34
	'||'           reduce using rule 34


State 45

	Expr8 -> Expr9 .                                    (rule 35)
	Expr8 -> Expr9 . ':' Expr9                          (rule 36)
	Expr7 -> Expr9 . ListExpr9                          (rule 41)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	'('            shift, and enter state 56
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	':'            shift, and enter state 110
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'['            shift, and enter state 59
	'else'         reduce using rule 35
	'in'           reduce using rule 35
	'then'         reduce using rule 35
	'||'           reduce using rule 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 108
	ListExpr9      goto state 109

State 46

	Expr7 -> Expr8 .                                    (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'else'         reduce using rule 42
	'in'           reduce using rule 42
	'then'         reduce using rule 42
	'||'           reduce using rule 42


State 47

	Expr6 -> Expr7 .                                    (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'else'         reduce using rule 45
	'in'           reduce using rule 45
	'then'         reduce using rule 45
	'||'           reduce using rule 45


State 48

	Expr5 -> Expr6 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'else'         reduce using rule 47
	'in'           reduce using rule 47
	'then'         reduce using rule 47
	'||'           reduce using rule 47


State 49

	Expr5 -> Expr5 . MulOp Expr6                        (rule 46)
	Expr4 -> Expr5 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            shift, and enter state 105
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            shift, and enter state 106
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            shift, and enter state 107
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'else'         reduce using rule 49
	'in'           reduce using rule 49
	'then'         reduce using rule 49
	'||'           reduce using rule 49

	MulOp          goto state 104

State 50

	Expr4 -> Expr4 . AddOp Expr5                        (rule 48)
	Expr3 -> Expr4 .                                    (rule 51)

	'!='           reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'+'            shift, and enter state 102
	','            reduce using rule 51
	'-'            shift, and enter state 103
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'else'         reduce using rule 51
	'in'           reduce using rule 51
	'then'         reduce using rule 51
	'||'           reduce using rule 51

	AddOp          goto state 101

State 51

	Expr3 -> Expr3 . RelOp Expr4                        (rule 50)
	Expr2 -> Expr3 . '&&' Expr2                         (rule 52)
	Expr2 -> Expr3 .                                    (rule 53)

	'!='           shift, and enter state 94
	'&&'           shift, and enter state 95
	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'<'            shift, and enter state 96
	'<='           shift, and enter state 97
	'=='           shift, and enter state 98
	'>'            shift, and enter state 99
	'>='           shift, and enter state 100
	'else'         reduce using rule 53
	'in'           reduce using rule 53
	'then'         reduce using rule 53
	'||'           reduce using rule 53

	RelOp          goto state 93

State 52

	Expr1 -> Expr2 . '||' Expr1                         (rule 54)
	Expr1 -> Expr2 .                                    (rule 59)

	')'            reduce using rule 59
	';'            reduce using rule 59
	'in'           reduce using rule 59
	'||'           shift, and enter state 92


State 53

	Expr -> Expr1 .                                     (rule 63)

	')'            reduce using rule 63
	';'            reduce using rule 63
	'in'           reduce using rule 63


State 54

	Def -> Ident ListOTIdent OptTypeAnnot '=' Expr .    (rule 7)

	';'            reduce using rule 7
	'in'           reduce using rule 7


State 55

	Expr6 -> '!' . Expr7                                (rule 44)

	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 91

State 56

	Expr9 -> '(' . Expr ')'                             (rule 33)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 90

State 57

	Lambda -> '(lambda' . ListOTIdent OptTypeAnnot '=>' Expr ')'    (rule 28)

	'('            shift, and enter state 16
	'::'           reduce using rule 25
	'=>'           reduce using rule 25
	L_Ident        shift, and enter state 2

	Ident          goto state 12
	TIdent         goto state 13
	OTIdent        goto state 14
	ListOTIdent    goto state 89

State 58

	Expr6 -> '-' . Expr7                                (rule 43)

	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 88

State 59

	Expr9 -> '[' . ListVal ']'                          (rule 32)

	'('            shift, and enter state 56
	'['            shift, and enter state 59
	']'            reduce using rule 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 85
	Val            goto state 86
	ListVal        goto state 87

State 60

	Expr1 -> 'if' . Expr2 'then' Expr2 'else' Expr2     (rule 56)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 84

State 61

	Expr1 -> 'let' . Def 'in' Expr2                     (rule 57)

	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Def            goto state 83

State 62

	Expr1 -> 'letrec' . Def 'in' Expr2                  (rule 58)

	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Def            goto state 82

State 63

	Expr1 -> 'match' . Ident 'with' ListPatternBranch    (rule 55)

	L_Ident        shift, and enter state 2

	Ident          goto state 81

State 64

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'else'         reduce using rule 2
	'in'           reduce using rule 2
	'then'         reduce using rule 2
	'||'           reduce using rule 2
	L_Ident        reduce using rule 2
	L_integ        reduce using rule 2
	L_BoolLiteral  reduce using rule 2


State 65

	BoolLiteral -> L_BoolLiteral .                      (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'else'         reduce using rule 3
	'in'           reduce using rule 3
	'then'         reduce using rule 3
	'||'           reduce using rule 3
	L_Ident        reduce using rule 3
	L_integ        reduce using rule 3
	L_BoolLiteral  reduce using rule 3


State 66

	Type4 -> '[' Type . ']'                             (rule 102)

	']'            shift, and enter state 80


State 67

	Type4 -> Ident .                                    (rule 103)
	Type3 -> '(' Ident . ListType4 ')'                  (rule 105)

	'('            shift, and enter state 79
	')'            reduce using rule 103
	'->'           reduce using rule 103
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 77
	ListType4      goto state 78

State 68

	Type4 -> '(' Type . ')'                             (rule 104)

	')'            shift, and enter state 76


State 69

	Type1 -> Type2 '->' . Type1                         (rule 109)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 75
	Type2          goto state 33

State 70

	Constr -> Ident . TypeAnnot                         (rule 15)

	'::'           shift, and enter state 20

	TypeAnnot      goto state 74

State 71

	ListConstr -> Constr .                              (rule 16)
	ListConstr -> Constr . ListConstr                   (rule 17)

	';'            reduce using rule 16
	L_Ident        shift, and enter state 2

	Ident          goto state 70
	Constr         goto state 71
	ListConstr     goto state 73

State 72

	TypeDef -> 'data' Ident ListTVar 'where' ListConstr .    (rule 11)

	';'            reduce using rule 11


State 73

	ListConstr -> Constr ListConstr .                   (rule 17)

	';'            reduce using rule 17


State 74

	Constr -> Ident TypeAnnot .                         (rule 15)

	';'            reduce using rule 15
	L_Ident        reduce using rule 15


State 75

	Type1 -> Type2 '->' Type1 .                         (rule 109)

	')'            reduce using rule 109
	';'            reduce using rule 109
	'='            reduce using rule 109
	'=>'           reduce using rule 109
	']'            reduce using rule 109
	L_Ident        reduce using rule 109


State 76

	Type4 -> '(' Type ')' .                             (rule 104)

	'('            reduce using rule 104
	')'            reduce using rule 104
	'->'           reduce using rule 104
	';'            reduce using rule 104
	'='            reduce using rule 104
	'=>'           reduce using rule 104
	'Bool'         reduce using rule 104
	'Int'          reduce using rule 104
	'['            reduce using rule 104
	']'            reduce using rule 104
	L_Ident        reduce using rule 104


State 77

	ListType4 -> Type4 .                                (rule 107)
	ListType4 -> Type4 . ListType4                      (rule 108)

	'('            shift, and enter state 79
	')'            reduce using rule 107
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 77
	ListType4      goto state 127

State 78

	Type3 -> '(' Ident ListType4 . ')'                  (rule 105)

	')'            shift, and enter state 126


State 79

	Type4 -> '(' . Type ')'                             (rule 104)

	'('            shift, and enter state 34
	'Bool'         shift, and enter state 35
	'Int'          shift, and enter state 36
	'['            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 28
	Type4          goto state 29
	Type3          goto state 30
	Type1          goto state 31
	Type           goto state 68
	Type2          goto state 33

State 80

	Type4 -> '[' Type ']' .                             (rule 102)

	'('            reduce using rule 102
	')'            reduce using rule 102
	'->'           reduce using rule 102
	';'            reduce using rule 102
	'='            reduce using rule 102
	'=>'           reduce using rule 102
	'Bool'         reduce using rule 102
	'Int'          reduce using rule 102
	'['            reduce using rule 102
	']'            reduce using rule 102
	L_Ident        reduce using rule 102


State 81

	Expr1 -> 'match' Ident . 'with' ListPatternBranch    (rule 55)

	'with'         shift, and enter state 125


State 82

	Expr1 -> 'letrec' Def . 'in' Expr2                  (rule 58)

	'in'           shift, and enter state 124


State 83

	Expr1 -> 'let' Def . 'in' Expr2                     (rule 57)

	'in'           shift, and enter state 123


State 84

	Expr1 -> 'if' Expr2 . 'then' Expr2 'else' Expr2     (rule 56)

	'then'         shift, and enter state 122


State 85

	Val -> Expr9 .                                      (rule 37)

	','            reduce using rule 37
	']'            reduce using rule 37


State 86

	ListVal -> Val .                                    (rule 39)
	ListVal -> Val . ',' ListVal                        (rule 40)

	','            shift, and enter state 121
	']'            reduce using rule 39


State 87

	Expr9 -> '[' ListVal . ']'                          (rule 32)

	']'            shift, and enter state 120


State 88

	Expr6 -> '-' Expr7 .                                (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'else'         reduce using rule 43
	'in'           reduce using rule 43
	'then'         reduce using rule 43
	'||'           reduce using rule 43


State 89

	Lambda -> '(lambda' ListOTIdent . OptTypeAnnot '=>' Expr ')'    (rule 28)

	'::'           shift, and enter state 20
	'=>'           reduce using rule 20

	TypeAnnot      goto state 18
	OptTypeAnnot   goto state 119

State 90

	Expr9 -> '(' Expr . ')'                             (rule 33)

	')'            shift, and enter state 118


State 91

	Expr6 -> '!' Expr7 .                                (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'else'         reduce using rule 44
	'in'           reduce using rule 44
	'then'         reduce using rule 44
	'||'           reduce using rule 44


State 92

	Expr1 -> Expr2 '||' . Expr1                         (rule 54)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 117

State 93

	Expr3 -> Expr3 RelOp . Expr4                        (rule 50)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 116

State 94

	RelOp -> '!=' .                                     (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'(lambda'      reduce using rule 78
	'-'            reduce using rule 78
	'['            reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_BoolLiteral  reduce using rule 78


State 95

	Expr2 -> Expr3 '&&' . Expr2                         (rule 52)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 115

State 96

	RelOp -> '<' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'(lambda'      reduce using rule 73
	'-'            reduce using rule 73
	'['            reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_BoolLiteral  reduce using rule 73


State 97

	RelOp -> '<=' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'(lambda'      reduce using rule 74
	'-'            reduce using rule 74
	'['            reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_BoolLiteral  reduce using rule 74


State 98

	RelOp -> '==' .                                     (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'(lambda'      reduce using rule 77
	'-'            reduce using rule 77
	'['            reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_BoolLiteral  reduce using rule 77


State 99

	RelOp -> '>' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'(lambda'      reduce using rule 75
	'-'            reduce using rule 75
	'['            reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_BoolLiteral  reduce using rule 75


State 100

	RelOp -> '>=' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'(lambda'      reduce using rule 76
	'-'            reduce using rule 76
	'['            reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_BoolLiteral  reduce using rule 76


State 101

	Expr4 -> Expr4 AddOp . Expr5                        (rule 48)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 114

State 102

	AddOp -> '+' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'(lambda'      reduce using rule 68
	'-'            reduce using rule 68
	'['            reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_BoolLiteral  reduce using rule 68


State 103

	AddOp -> '-' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'(lambda'      reduce using rule 69
	'-'            reduce using rule 69
	'['            reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_BoolLiteral  reduce using rule 69


State 104

	Expr5 -> Expr5 MulOp . Expr6                        (rule 46)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 113

State 105

	MulOp -> '%' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'(lambda'      reduce using rule 72
	'-'            reduce using rule 72
	'['            reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_BoolLiteral  reduce using rule 72


State 106

	MulOp -> '*' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'(lambda'      reduce using rule 70
	'-'            reduce using rule 70
	'['            reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_BoolLiteral  reduce using rule 70


State 107

	MulOp -> '/' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'(lambda'      reduce using rule 71
	'-'            reduce using rule 71
	'['            reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_BoolLiteral  reduce using rule 71


State 108

	ListExpr9 -> Expr9 .                                (rule 66)
	ListExpr9 -> Expr9 . ListExpr9                      (rule 67)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	'('            shift, and enter state 56
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'['            shift, and enter state 59
	'else'         reduce using rule 66
	'in'           reduce using rule 66
	'then'         reduce using rule 66
	'||'           reduce using rule 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 108
	ListExpr9      goto state 112

State 109

	Expr7 -> Expr9 ListExpr9 .                          (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'else'         reduce using rule 41
	'in'           reduce using rule 41
	'then'         reduce using rule 41
	'||'           reduce using rule 41


State 110

	Expr8 -> Expr9 ':' . Expr9                          (rule 36)

	'('            shift, and enter state 56
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 111

State 111

	Expr8 -> Expr9 ':' Expr9 .                          (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'else'         reduce using rule 36
	'in'           reduce using rule 36
	'then'         reduce using rule 36
	'||'           reduce using rule 36


State 112

	ListExpr9 -> Expr9 ListExpr9 .                      (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'else'         reduce using rule 67
	'in'           reduce using rule 67
	'then'         reduce using rule 67
	'||'           reduce using rule 67


State 113

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'else'         reduce using rule 46
	'in'           reduce using rule 46
	'then'         reduce using rule 46
	'||'           reduce using rule 46


State 114

	Expr5 -> Expr5 . MulOp Expr6                        (rule 46)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 48)

	'!='           reduce using rule 48
	'%'            shift, and enter state 105
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            shift, and enter state 106
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            shift, and enter state 107
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'else'         reduce using rule 48
	'in'           reduce using rule 48
	'then'         reduce using rule 48
	'||'           reduce using rule 48

	MulOp          goto state 104

State 115

	Expr2 -> Expr3 '&&' Expr2 .                         (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	'else'         reduce using rule 52
	'in'           reduce using rule 52
	'then'         reduce using rule 52
	'||'           reduce using rule 52


State 116

	Expr4 -> Expr4 . AddOp Expr5                        (rule 48)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 50)

	'!='           reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'+'            shift, and enter state 102
	','            reduce using rule 50
	'-'            shift, and enter state 103
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'else'         reduce using rule 50
	'in'           reduce using rule 50
	'then'         reduce using rule 50
	'||'           reduce using rule 50

	AddOp          goto state 101

State 117

	Expr1 -> Expr2 '||' Expr1 .                         (rule 54)

	')'            reduce using rule 54
	';'            reduce using rule 54
	'in'           reduce using rule 54


State 118

	Expr9 -> '(' Expr ')' .                             (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	':'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	'else'         reduce using rule 33
	'in'           reduce using rule 33
	'then'         reduce using rule 33
	'||'           reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_BoolLiteral  reduce using rule 33


State 119

	Lambda -> '(lambda' ListOTIdent OptTypeAnnot . '=>' Expr ')'    (rule 28)

	'=>'           shift, and enter state 135


State 120

	Expr9 -> '[' ListVal ']' .                          (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	':'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	'else'         reduce using rule 32
	'in'           reduce using rule 32
	'then'         reduce using rule 32
	'||'           reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_BoolLiteral  reduce using rule 32


State 121

	ListVal -> Val ',' . ListVal                        (rule 40)

	'('            shift, and enter state 56
	'['            shift, and enter state 59
	']'            reduce using rule 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Expr9          goto state 85
	Val            goto state 86
	ListVal        goto state 134

State 122

	Expr1 -> 'if' Expr2 'then' . Expr2 'else' Expr2     (rule 56)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 133

State 123

	Expr1 -> 'let' Def 'in' . Expr2                     (rule 57)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 132

State 124

	Expr1 -> 'letrec' Def 'in' . Expr2                  (rule 58)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 131

State 125

	Expr1 -> 'match' Ident 'with' . ListPatternBranch    (rule 55)

	'('            shift, and enter state 130

	PatternBranch  goto state 128
	ListPatternBranchgoto state 129

State 126

	Type3 -> '(' Ident ListType4 ')' .                  (rule 105)

	')'            reduce using rule 105
	'->'           reduce using rule 105
	';'            reduce using rule 105
	'='            reduce using rule 105
	'=>'           reduce using rule 105
	']'            reduce using rule 105
	L_Ident        reduce using rule 105


State 127

	ListType4 -> Type4 ListType4 .                      (rule 108)

	')'            reduce using rule 108


State 128

	ListPatternBranch -> PatternBranch .                (rule 61)
	ListPatternBranch -> PatternBranch . ',' ListPatternBranch    (rule 62)

	')'            reduce using rule 61
	','            shift, and enter state 152
	';'            reduce using rule 61
	'in'           reduce using rule 61


State 129

	Expr1 -> 'match' Ident 'with' ListPatternBranch .    (rule 55)

	')'            reduce using rule 55
	';'            reduce using rule 55
	'in'           reduce using rule 55


State 130

	PatternBranch -> '(' . Pattern ')' '>>>' Expr2      (rule 60)

	'('            shift, and enter state 149
	'['            shift, and enter state 150
	'[]'           shift, and enter state 151
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 138
	Integer        goto state 139
	BoolLiteral    goto state 140
	ListPattern    goto state 141
	Pattern5       goto state 142
	Pattern4       goto state 143
	Pattern3       goto state 144
	Pattern        goto state 145
	Pattern1       goto state 146
	Pattern2       goto state 147
	Literal        goto state 148

State 131

	Expr1 -> 'letrec' Def 'in' Expr2 .                  (rule 58)

	')'            reduce using rule 58
	';'            reduce using rule 58
	'in'           reduce using rule 58


State 132

	Expr1 -> 'let' Def 'in' Expr2 .                     (rule 57)

	')'            reduce using rule 57
	';'            reduce using rule 57
	'in'           reduce using rule 57


State 133

	Expr1 -> 'if' Expr2 'then' Expr2 . 'else' Expr2     (rule 56)

	'else'         shift, and enter state 137


State 134

	ListVal -> Val ',' ListVal .                        (rule 40)

	']'            reduce using rule 40


State 135

	Lambda -> '(lambda' ListOTIdent OptTypeAnnot '=>' . Expr ')'    (rule 28)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	'if'           shift, and enter state 60
	'let'          shift, and enter state 61
	'letrec'       shift, and enter state 62
	'match'        shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 136

State 136

	Lambda -> '(lambda' ListOTIdent OptTypeAnnot '=>' Expr . ')'    (rule 28)

	')'            shift, and enter state 164


State 137

	Expr1 -> 'if' Expr2 'then' Expr2 'else' . Expr2     (rule 56)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 163

State 138

	Pattern4 -> Ident . ListField                       (rule 83)

	'('            shift, and enter state 149
	')'            reduce using rule 92
	':'            reduce using rule 92
	'['            shift, and enter state 150
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 159
	Integer        goto state 139
	BoolLiteral    goto state 140
	Pattern5       goto state 160
	Field          goto state 161
	ListField      goto state 162
	Literal        goto state 148

State 139

	Literal -> Integer .                                (rule 94)

	'('            reduce using rule 94
	')'            reduce using rule 94
	','            reduce using rule 94
	':'            reduce using rule 94
	'['            reduce using rule 94
	']'            reduce using rule 94
	L_Ident        reduce using rule 94
	L_integ        reduce using rule 94
	L_BoolLiteral  reduce using rule 94


State 140

	Literal -> BoolLiteral .                            (rule 95)

	'('            reduce using rule 95
	')'            reduce using rule 95
	','            reduce using rule 95
	':'            reduce using rule 95
	'['            reduce using rule 95
	']'            reduce using rule 95
	L_Ident        reduce using rule 95
	L_integ        reduce using rule 95
	L_BoolLiteral  reduce using rule 95


State 141

	Pattern3 -> ListPattern .                           (rule 85)

	')'            reduce using rule 85


State 142

	Pattern4 -> Pattern5 .                              (rule 84)

	')'            reduce using rule 84
	':'            reduce using rule 84


State 143

	ListPattern -> Pattern4 . ':' Pattern4              (rule 80)
	Pattern3 -> Pattern4 .                              (rule 86)

	')'            reduce using rule 86
	':'            shift, and enter state 158


State 144

	Pattern2 -> Pattern3 .                              (rule 89)

	')'            reduce using rule 89


State 145

	PatternBranch -> '(' Pattern . ')' '>>>' Expr2      (rule 60)

	')'            shift, and enter state 157


State 146

	Pattern -> Pattern1 .                               (rule 87)

	')'            reduce using rule 87


State 147

	Pattern1 -> Pattern2 .                              (rule 88)

	')'            reduce using rule 88


State 148

	Pattern5 -> Literal .                               (rule 81)

	'('            reduce using rule 81
	')'            reduce using rule 81
	':'            reduce using rule 81
	'['            reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_BoolLiteral  reduce using rule 81


State 149

	Pattern5 -> '(' . Pattern ')'                       (rule 82)

	'('            shift, and enter state 149
	'['            shift, and enter state 150
	'[]'           shift, and enter state 151
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 138
	Integer        goto state 139
	BoolLiteral    goto state 140
	ListPattern    goto state 141
	Pattern5       goto state 142
	Pattern4       goto state 143
	Pattern3       goto state 144
	Pattern        goto state 156
	Pattern1       goto state 146
	Pattern2       goto state 147
	Literal        goto state 148

State 150

	Literal -> '[' . ListLiteral ']'                    (rule 96)

	'['            shift, and enter state 150
	']'            reduce using rule 97
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Integer        goto state 139
	BoolLiteral    goto state 140
	Literal        goto state 154
	ListLiteral    goto state 155

State 151

	ListPattern -> '[]' .                               (rule 79)

	')'            reduce using rule 79


State 152

	ListPatternBranch -> PatternBranch ',' . ListPatternBranch    (rule 62)

	'('            shift, and enter state 130

	PatternBranch  goto state 128
	ListPatternBranchgoto state 153

State 153

	ListPatternBranch -> PatternBranch ',' ListPatternBranch .    (rule 62)

	')'            reduce using rule 62
	';'            reduce using rule 62
	'in'           reduce using rule 62


State 154

	ListLiteral -> Literal .                            (rule 98)
	ListLiteral -> Literal . ',' ListLiteral            (rule 99)

	','            shift, and enter state 170
	']'            reduce using rule 98


State 155

	Literal -> '[' ListLiteral . ']'                    (rule 96)

	']'            shift, and enter state 169


State 156

	Pattern5 -> '(' Pattern . ')'                       (rule 82)

	')'            shift, and enter state 168


State 157

	PatternBranch -> '(' Pattern ')' . '>>>' Expr2      (rule 60)

	'>>>'          shift, and enter state 167


State 158

	ListPattern -> Pattern4 ':' . Pattern4              (rule 80)

	'('            shift, and enter state 149
	'['            shift, and enter state 150
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 138
	Integer        goto state 139
	BoolLiteral    goto state 140
	Pattern5       goto state 142
	Pattern4       goto state 166
	Literal        goto state 148

State 159

	Field -> Ident .                                    (rule 91)

	'('            reduce using rule 91
	')'            reduce using rule 91
	':'            reduce using rule 91
	'['            reduce using rule 91
	L_Ident        reduce using rule 91
	L_integ        reduce using rule 91
	L_BoolLiteral  reduce using rule 91


State 160

	Field -> Pattern5 .                                 (rule 90)

	'('            reduce using rule 90
	')'            reduce using rule 90
	':'            reduce using rule 90
	'['            reduce using rule 90
	L_Ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_BoolLiteral  reduce using rule 90


State 161

	ListField -> Field . ListField                      (rule 93)

	'('            shift, and enter state 149
	')'            reduce using rule 92
	':'            reduce using rule 92
	'['            shift, and enter state 150
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 159
	Integer        goto state 139
	BoolLiteral    goto state 140
	Pattern5       goto state 160
	Field          goto state 161
	ListField      goto state 165
	Literal        goto state 148

State 162

	Pattern4 -> Ident ListField .                       (rule 83)

	')'            reduce using rule 83
	':'            reduce using rule 83


State 163

	Expr1 -> 'if' Expr2 'then' Expr2 'else' Expr2 .     (rule 56)

	')'            reduce using rule 56
	';'            reduce using rule 56
	'in'           reduce using rule 56


State 164

	Lambda -> '(lambda' ListOTIdent OptTypeAnnot '=>' Expr ')' .    (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&&'           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'/'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'else'         reduce using rule 28
	'in'           reduce using rule 28
	'then'         reduce using rule 28
	'||'           reduce using rule 28


State 165

	ListField -> Field ListField .                      (rule 93)

	')'            reduce using rule 93
	':'            reduce using rule 93


State 166

	ListPattern -> Pattern4 ':' Pattern4 .              (rule 80)

	')'            reduce using rule 80


State 167

	PatternBranch -> '(' Pattern ')' '>>>' . Expr2      (rule 60)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'(lambda'      shift, and enter state 57
	'-'            shift, and enter state 58
	'['            shift, and enter state 59
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Ident          goto state 41
	Integer        goto state 42
	BoolLiteral    goto state 43
	Lambda         goto state 44
	Expr9          goto state 45
	Expr8          goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 172

State 168

	Pattern5 -> '(' Pattern ')' .                       (rule 82)

	'('            reduce using rule 82
	')'            reduce using rule 82
	':'            reduce using rule 82
	'['            reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_BoolLiteral  reduce using rule 82


State 169

	Literal -> '[' ListLiteral ']' .                    (rule 96)

	'('            reduce using rule 96
	')'            reduce using rule 96
	','            reduce using rule 96
	':'            reduce using rule 96
	'['            reduce using rule 96
	']'            reduce using rule 96
	L_Ident        reduce using rule 96
	L_integ        reduce using rule 96
	L_BoolLiteral  reduce using rule 96


State 170

	ListLiteral -> Literal ',' . ListLiteral            (rule 99)

	'['            shift, and enter state 150
	']'            reduce using rule 97
	L_integ        shift, and enter state 64
	L_BoolLiteral  shift, and enter state 65

	Integer        goto state 139
	BoolLiteral    goto state 140
	Literal        goto state 154
	ListLiteral    goto state 171

State 171

	ListLiteral -> Literal ',' ListLiteral .            (rule 99)

	']'            reduce using rule 99


State 172

	PatternBranch -> '(' Pattern ')' '>>>' Expr2 .      (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'in'           reduce using rule 60


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 113
Number of terminals: 45
Number of non-terminals: 57
Number of states: 173
